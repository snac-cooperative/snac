#!/usr/bin/env php
<?php
/**
 * Test postgres ids across snac
 *
 * Give the end point id numbers on the command line and it will print out all ids between them throughout the system
 *
 *
 * @author Robbie Hott
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 * @copyright 2015 the Rector and Visitors of the University of Virginia, and
 *            the Regents of the University of California
 */
// Include the global autoloader generated by composer
include "../vendor/autoload.php";

use \Monolog\Logger;
use \Monolog\Handler\StreamHandler;

if (count($argv) < 3) {
    die ("Usage: php test_postgres_ids.php FROM_ID TO_ID\n");
}
if (!is_numeric($argv[1]) || !is_numeric($argv[2])) {
    die ("Usage: php test_postgres_ids.php FROM_ID TO_ID\n");
}
$from = $argv[1];
$to = $argv[2];

// Set up the global log stream
$log = new StreamHandler(\snac\Config::$LOG_DIR . \snac\Config::$SERVER_LOGFILE, Logger::DEBUG);

$tables = array("appuser",
"appuser_group",
"biog_hist",
"convention_declaration",
"date_range",
"activity",
"gender",
"general_context",
"language",
"legal_status",
"mandate",
"name",
"name_component",
"name_contributor",
"nationality",
"nrd",
"occupation",
"otherid",
"place_link",
"privilege",
"related_identity",
"related_resource",
"role",
"scm",
"source",
"structure_genealogy",
"subject",
"version_history");


$db = new \snac\server\database\DatabaseConnector();

$data = array();

foreach ($tables as $table) {
    try {
        $results = $db->query("select * from $table where id >= $from and id < $to", array());
        while ($row = $db->fetchRow($results)) {
            $data[$row["id"]] = array_merge(array("table"=>$table),$row);
        }
    } catch (\Exception $e) {

    }
}

ksort($data);

foreach ($data as $id => $row) {
    echo "$id\t\t".trim(preg_replace('/\s\s+/', ' ', implode("|", $row)))."\n";
}
