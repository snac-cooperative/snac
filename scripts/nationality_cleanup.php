#!/usr/bin/env php
<?php
/**
 * Bulk update of resource hrefs from a csv file
 *
 *
 * @author Joseph Glass
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 * @copyright 2018 the Rector and Visitors of the University of Virginia, and
 *            the Regents of the University of California
 */
// Include the global autoloader generated by composer
include "../vendor/autoload.php";

// use \Monolog\Logger;
// use \Monolog\Handler\StreamHandler;

// Set up the global log stream
// $log = new StreamHandler(\snac\Config::$LOG_DIR . \snac\Config::$SERVER_LOGFILE, Logger::DEBUG);
//
// $logger = new \Monolog\Logger('Server');
// $logger->pushHandler($log);

// SNAC Postgres DB Handler
// $cStore = new \snac\server\database\DBUtil();
// $uStore = new \snac\server\database\DBUser();
// $host = Config::$DATABASE["host"];
// $port = Config::$DATABASE["port"];
// $database = Config::$DATABASE["database"];
// $password = Config::$DATABASE["password"];
// $user = Config::$DATABASE["user"];
// $dbHandle = pg_connect("host=$host port=$port dbname=$database user=$user password=$password");

$db = new \snac\server\database\DatabaseConnector();



$handle = fopen("nationality_matching_cleanup.csv", "r");
$nonmatching = fopen("nationality_nonmatching_cleanup.csv", "r");
$write = fopen("nationality_ids.csv", "w");


echo "Reading nationality\n";

    function createGoodTerms($db) {
        $handle = fopen("nationality_matching_cleanup.csv", "r");
        while (($data = fgetcsv($handle, 1000, ',')) !== false) {
            $correct_term = $data[0];
            $correct_term_id = $data[1];

            if ($correct_term_id != '') {
                // Update vocab with id to the correct value
////                $db->query("UPDATE vocabulary SET value = $correct_term where type = 'nationality' and value ilike $1", array($term));
                $db->query("UPDATE vocabulary SET value = $1 where id = $2", array($correct_term, $correct_term_id));
                echo "Updating vocabulary, setting id $correct_term_id to value $correct_term \n";
            } else {
                //Insert new empty LoCDT term
                $db->query("INSERT INTO vocabulary(type, value) VALUES('nationality', $1)", array($correct_term));
                echo "Inserting $correct_term into vocab\n";
            }
        }
        fclose($handle);
    }

    function updateNationalityTermIDs($db, $column) {
        $handle = fopen("nationality_matching_cleanup.csv", "r");
        while (($data = fgetcsv($handle, 1000, ',')) !== false) {
            $correct_term = $data[0];
            $correct_term_id = $data[1];
            $term = $data[$column];  // get column from nationality_matching_cleanup.csv

            if ($correct_term_id != '' && $term != '') {
                // update all nationalities
                $resource = $db->query("select * from vocabulary where type = 'nationality' and value = $1", array($term));
                $row = pg_fetch_assoc($resource);
                $term_id = $row['id'];
                if ($term_id) {
                    $db->query("UPDATE nationality SET term_id = $1 where term_id = $2", array($correct_term_id, $term_id));
                    echo "Updating nationality, setting $term with id $term_id to $correct_term id: $correct_term_id \n";
                    // $db->query("DELETE FROM vocabulary WHERE id = $1 AND type = 'nationality'", array($term_id));
                    echo "Should delete $term with id $term_id from vocab\n";
                } else {
                    echo "No term_id for $term\n";
                }
            }
        }
        fclose($handle);
    }

    function updateNonmatching($db) {
        echo "Updating Nonmatching\n";
        $nonmatching = fopen("nationality_nonmatching_cleanup.csv", "r");
        while (($data = fgetcsv($nonmatching, 1000, ',')) !== false) {
            $correct_term = $data[0];
            $correct_term_id = $data[1];
            $old_term_id = $data[2];

                if ($correct_term_id === '') {
                    // if no correct_term_id, check if term exists
                    $resource = $db->query("select * from vocabulary where type = 'nationality' and value = $1", array($correct_term));
                    $row = pg_fetch_assoc($resource);

                    if (!$row['id']) {
                        // if term doesn't exist, insert it
                        $db->query("INSERT INTO vocabulary(type, value) VALUES('nationality', $1)", array($correct_term));
                        echo "Inserting: $correct_term into vocab\n";
                        $resource = $db->query("select * from vocabulary where type = 'nationality' and value = $1", array($correct_term));
                        $row = pg_fetch_assoc($resource);
                    }
                    $correct_term_id = $row['id'];
                    if (!$row['id']) {
                        echo "Error: can't find id for $correct_term\n";
                    }
                    // delete old term_id from vocabulary
                    // $db->query("DELETE FROM vocabulary WHERE id = $1 AND type = 'nationality'", array($old_term_id));
                    echo "Should delete id $old_term_id from vocab for {$row['value']} \n";

                }
            // set nationality to correct term.
            $db->query("UPDATE nationality set term_id = $1 where term_id = $2 ", array($correct_term_id, $old_term_id));
            echo "Updating nationality for $correct_term, changing $old_term_id to $correct_term_id\n";


        }
        fclose($nonmatching);
    }

    createGoodTerms($db);
    updateNationalityTermIDs($db, 2);
    updateNationalityTermIDs($db, 3);
    updateNationalityTermIDs($db, 4);
    updateNationalityTermIDs($db, 5);
    updateNationalityTermIDs($db, 6);
    updateNationalityTermIDs($db, 7);
    updateNationalityTermIDs($db, 8);
    updateNationalityTermIDs($db, 9);
    updateNationalityTermIDs($db, 10);
    updateNationalityTermIDs($db, 11);
    updateNonmatching($db);
    echo 'done!';
