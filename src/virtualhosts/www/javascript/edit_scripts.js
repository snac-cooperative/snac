(function(e, a) { for(var i in a) e[i] = a[i]; }(window, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ 3:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"somethingHasBeenEdited\", function() { return somethingHasBeenEdited; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setEditedFlag\", function() { return setEditedFlag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"undoSet\", function() { return undoSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaults\", function() { return defaults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayErrorMessage\", function() { return displayErrorMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addDateEntry\", function() { return addDateEntry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addDateRangeEntry\", function() { return addDateRangeEntry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addSCMEntry\", function() { return addSCMEntry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeEditable\", function() { return makeEditable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeUneditable\", function() { return makeUneditable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeSCMUneditable\", function() { return makeSCMUneditable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setRepeatedDataDeleted\", function() { return setRepeatedDataDeleted; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newAddressLine\", function() { return newAddressLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newNameEntryComponent\", function() { return newNameEntryComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateNameEntryHeading\", function() { return updateNameEntryHeading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newNameEntryRule\", function() { return newNameEntryRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateDate\", function() { return updateDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chooseSuggestedGeoPlace\", function() { return chooseSuggestedGeoPlace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"magicDefaultFill\", function() { return magicDefaultFill; });\n/**\n * Edit Scripts\n *\n * Scripts used in the edit page\n *\n * @author Robbie Hott\n * @license https://opensource.org/licenses/BSD-3-Clause BSD 3-Clause\n * @copyright 2015 the Rector and Visitors of the University of Virginia, and\n *            the Regents of the University of California\n */\n\nvar biogHistEditor = null;\n\n// Has anything been edited on this page?\nvar somethingHasBeenEdited = false;\n\nfunction setEditedFlag(val) {\n    if (val == true) {\n        $(\"#save_and_continue\").addClass(\"save-active\");\n    } else {\n        $(\"#save_and_continue\").removeClass(\"save-active\");\n    }\n    somethingHasBeenEdited = val;\n}\n\n// Global Undo Set\nvar undoSet = new Array();\n\nvar defaults = {\n    language: {\n        id: 130,\n        term: \"eng\"\n    },\n    script: {\n        id: 586,\n        term: \"Latn\"\n    }\n};\n\n/**\n * Display Error message\n *\n * Displays the error message box to the user with the given error message\n *\n * @param string|object err The error message (string) or error object containing a message and type string\n */\nfunction displayErrorMessage(err, data) {\n    var errorMsg = \"\";\n    if (typeof err === 'undefined') errorMsg = \"an unknown problem occurred\";else if (typeof err == \"string\") errorMsg = err;else if (err.message) errorMsg = err.message;else if (err.type) errorMsg = err.type;else errorMsg = \"an unknown problem occurred\";\n\n    $('#error-message').html(\"<h4>Oops</h4><p>\" + errorMsg + \"</p>\" + \"<p class=\\\"text-right\\\">\" + \"<button type=\\\"button\\\" class=\\\"btn btn-warning\\\" aria-label=\\\"Close\\\" onClick=\\\"$('#error-message').slideUp()\\\">\" + \"Stay Here\" + \"</button> \" + \"<a href=\\\"\" + snacUrl + \"/dashboard\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">\" + \"Go to Dashboard\" + \"</a>\" + \"</p>\");\n    setTimeout(function () {\n        $('#error-message').slideDown();\n    }, 500);\n\n    // For reference, put the server response in the console\n    console.log(data);\n}\n\n/**\n * Add sub-Date GUI object\n *\n * Adds a Date GUI object to the Date modal for the given \"short\" type of data indexed by i\n *\n * @param string short The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i The index of the object to add a date object to.\n * @returns boolean false to keep the browser from redrawing the page\n */\nfunction addDateEntry(short, i) {\n    //next_date_{{short}}_{{i}}_j\n    var j = parseInt($('#next_date_' + short + '_' + i + '_j').text());\n    var id = j + \"_\" + i;\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n    var text = $('#sub_date_template').clone();\n    var html = text.html().replace(/ZZ/g, i).replace(/XX/g, j).replace(/SHORT/g, short);\n    $('#add_date_' + short + '_' + i + '_div').after(html);\n    $('#next_date_' + short + '_' + i + '_j').text(j + 1);\n    turnOnButtons(short + \"_date\" + j, i);\n    turnOnTooltips(short + \"_date_\" + j, i);\n    makeEditable(short + \"_date_\" + j, i);\n    return false;\n}\n\n/**\n * Add sub-Date GUI object\n *\n * Adds a Date GUI object to the Date modal for the given \"short\" type of data indexed by i\n *\n * @param string short The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i The index of the object to add a date object to.\n * @returns boolean false to keep the browser from redrawing the page\n */\nfunction addDateRangeEntry(short, i) {\n    //next_date_{{short}}_{{i}}_j\n    var j = parseInt($('#next_date_' + short + '_' + i + '_j').text());\n    var id = j + \"_\" + i;\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n    var text = $('#sub_dateRange_template').clone();\n    var html = text.html().replace(/ZZ/g, i).replace(/XX/g, j).replace(/SHORT/g, short);\n    $('#add_date_' + short + '_' + i + '_div').after(html);\n    $('#next_date_' + short + '_' + i + '_j').text(j + 1);\n    turnOnButtons(short + \"_date\" + j, i);\n    turnOnTooltips(short + \"_date_\" + j, i);\n    makeEditable(short + \"_date_\" + j, i);\n    return false;\n}\n\n/**\n * Add SCM GUI object\n *\n * Adds a GUI SCM object to the SCM modal for the given \"short\" type of data indexed by i\n *\n * @param string short The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i The index of the object to add an SCM object to.\n * @returns boolean false to keep the browser from redrawing the page\n */\nfunction addSCMEntry(short, i) {\n    //next_scm_{{short}}_{{i}}_j\n    var j = parseInt($('#next_scm_' + short + '_' + i + '_j').text());\n    var id = j + \"_\" + i;\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n    var text = $('#scm_template').clone();\n    var html = text.html().replace(/ZZ/g, i).replace(/YY/g, j).replace(/SHORT/g, short);\n    $('#add_scm_' + short + '_' + i + '_div').after(html);\n    $('#next_scm_' + short + '_' + i + '_j').text(j + 1);\n    turnOnSCMButtons(short, i, j);\n    turnOnTooltips(\"scm_\" + short, id);\n    makeSCMEditable(short, i, j);\n    return false;\n}\n\n/**\n * Undo Edit\n *\n * Returns the html for the (short, i) panel back to its original state, i.e. removes\n * the edit.  Before doing this, to clean up the page, it first makes the edited version\n * uneditable.\n *\n * @param string short The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i The index within the edit page of the object.\n */\nfunction undoEdit(short, i) {\n    makeUneditable(short, i);\n\n    // restore the old content\n    $(\"#\" + short + \"_datapart_\" + i).replaceWith(undoSet[short + \"-\" + i]);\n    turnOnTooltips(short, i);\n    $(\"#\" + short + \"_datapart_\" + i + \" input[type='checkbox']\").each(function () {\n        var obj = $(this);\n        obj.bootstrapToggle();\n    });\n}\n\n/**\n * Undo SCM Edit\n *\n * Takes an SCM GUI object (j) for a data object (short, i) and returns it back to its\n * original state (removing the edit).  Before doing this, to clean up the page and JS, it first\n * makes the edited version uneditable, then replaces the HTML.\n *\n * @param string short The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i The index within the edit page of the object.\n * @param string|int j The index within the data object SCM list on the edit page of the SCM object.\n */\nfunction undoSCMEdit(short, i, j) {\n    var id = j + \"_\" + i;\n    makeSCMUneditable(short, i, j);\n\n    // restore the old content\n    $(\"#scm_\" + short + \"_datapart_\" + id).replaceWith(undoSet[\"scm_\" + short + \"-\" + id]);\n    turnOnTooltips(\"scm_\" + short, id);\n}\n\n/**\n * Change vocabulary input divs to selects\n *\n * Changes all div's with id \"select_\" for a given data object (shortName, idStr) from a list of\n * inputs defining the parameters to a select (view mode) to a select box (edit mode).  It then\n * calls the select2 function to replace the select with an AJAX-compatible select.\n *\n * This function handles VOCABULARY select boxes ONLY.\n *\n * Note: idStr must not have the \"_\" pre-appended\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int idStr The index within the edit page of the object.\n */\nfunction textToSelect(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='select_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(\"select_\", \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var id = $(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr).val();\n            var term = $(\"#\" + shortName + \"_\" + name + \"_term_\" + idStr).val();\n            var vocabtype = $(\"#\" + shortName + \"_\" + name + \"_vocabtype_\" + idStr).val();\n            var minlength = $(\"#\" + shortName + \"_\" + name + \"_minlength_\" + idStr).val();\n            var placeholder = \"Select\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_placeholder_\" + idStr).exists()) {\n                placeholder = $(\"#\" + shortName + \"_\" + name + \"_placeholder_\" + idStr).val();\n            }\n            var options = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_defaultOptions_\" + idStr).exists()) {\n                options = $(\"#\" + shortName + \"_\" + name + \"_defaultOptions_\" + idStr).val();\n            }\n\n            cont.html(\"<select id='\" + shortName + \"_\" + name + \"_id_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_id_\" + idStr + \"' class='form-control' data-placeholder='\" + placeholder + \"'>\" + \"<option></option>\" + \"<option value=\\\"\" + id + \"\\\" selected>\" + term + \"</option>\" + options + \"</select>\" + \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_vocabtype_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_vocabtype_\" + idStr + \"\\\" value=\\\"\" + vocabtype + \"\\\"/>\" + \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_minlength_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_minlength_\" + idStr + \"\\\" value=\\\"\" + minlength + \"\\\"/>\");\n\n            if (name == \"citation\") scm_source_select_replace($(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr), \"_\" + idStr);else vocab_select_replace($(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr), \"_\" + idStr, vocabtype, minlength);\n        }\n    });\n}\n\nfunction textToCheckbox(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='checkbox_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(/^checkbox_/, \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var value = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n            var placeholderOn = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_placeholderOn_\" + idStr).exists()) {\n                placeholderOn = $(\"#\" + shortName + \"_\" + name + \"_placeholderOn_\" + idStr).val();\n            }\n            var placeholderOff = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_placeholderOff_\" + idStr).exists()) {\n                placeholderOff = $(\"#\" + shortName + \"_\" + name + \"_placeholderOff_\" + idStr).val();\n            }\n\n            var html = \"<input id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"' class='form-control' type='checkbox' value=\\\"checked\\\"\" + \"data-on=\\\"\" + placeholderOn + \"\\\" data-off=\\\"\" + placeholderOff + \"\\\"\";\n            if (value == 'checked') html += \" checked\";\n            html += \"/>\";\n            if (placeholderOn != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_placeholderOn_\" + idStr + \"\\\" \" + \"value=\\\"\" + placeholderOn + \"\\\"/>\";\n            }\n            if (placeholderOff != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_placeholderOff_\" + idStr + \"\\\" \" + \"value=\\\"\" + placeholderOff + \"\\\"/>\";\n            }\n\n            cont.html(html);\n            $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).bootstrapToggle();\n        }\n    });\n}\n\nfunction checkboxToText(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='checkbox_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(/^checkbox_/, \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var value = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n            var checked = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).prop('checked');\n            var placeholderOn = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_placeholderOn_\" + idStr).exists()) {\n                placeholderOn = $(\"#\" + shortName + \"_\" + name + \"_placeholderOn_\" + idStr).val();\n            }\n            var placeholderOff = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_placeholderOff_\" + idStr).exists()) {\n                placeholderOff = $(\"#\" + shortName + \"_\" + name + \"_placeholderOff_\" + idStr).val();\n            }\n\n            var html = \"<input id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"' type='hidden' value=\\\"\";\n            if (checked) html += \"checked\";\n            html += \"\\\"/>\";\n\n            html += \"<p class='form-control-static'>\";\n            if (checked) {\n                if (placeholderOn != \"\") html += placeholderOn;else html += value;\n            } else {\n                if (placeholderOff != \"\") html += placeholderOff;\n            }\n            html += \"</p>\";\n            if (placeholderOn != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_placeholderOn_\" + idStr + \"\\\" \" + \"value=\\\"\" + placeholderOn + \"\\\"/>\";\n            }\n            if (placeholderOff != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_placeholderOff_\" + idStr + \"\\\" \" + \"value=\\\"\" + placeholderOff + \"\\\"/>\";\n            }\n\n            $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).bootstrapToggle(\"destroy\");\n            cont.html(html);\n        }\n    });\n}\n\nfunction textToInput(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='text_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(/^text_/, \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var value = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n            var size = 0;\n            var sizeStr = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_size_\" + idStr).exists()) {\n                size = parseInt($(\"#\" + shortName + \"_\" + name + \"_size_\" + idStr).val());\n                sizeStr = \" size='\" + size + \"' \";\n            }\n            var placeholder = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_placeholder_\" + idStr).exists()) {\n                placeholder = $(\"#\" + shortName + \"_\" + name + \"_placeholder_\" + idStr).val();\n            }\n\n            var onKeyUp = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_onKeyUp_\" + idStr).exists()) {\n                onKeyUp = $(\"#\" + shortName + \"_\" + name + \"_onKeyUp_\" + idStr).val();\n            }\n            var onKeyUpStr = \"\";\n            if (onKeyUp != \"\") {\n                onKeyUpStr = \" onKeyUp='\" + onKeyUp + \"' \";\n            }\n\n            var html = \"<input id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"' class='form-control' type='text' value=\\\"\" + value + \"\\\"\" + sizeStr + onKeyUpStr + \"placeholder=\\\"\" + placeholder + \"\\\"/>\";\n            if (size != 0) {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_size_\" + idStr + \"\\\" \" + \"value=\\\"\" + size + \"\\\"/>\";\n            }\n            if (placeholder != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_placeholder_\" + idStr + \"\\\" \" + \"value=\\\"\" + placeholder + \"\\\"/>\";\n            }\n            if (onKeyUp != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_onKeyUp_\" + idStr + \"\\\" \" + \"value=\\\"\" + onKeyUp + \"\\\"/>\";\n            }\n\n            cont.html(html);\n        }\n    });\n}\n\nfunction inputToText(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='text_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(/^text_/, \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var value = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n            var size = 0;\n            if ($(\"#\" + shortName + \"_\" + name + \"_size_\" + idStr).exists()) {\n                size = parseInt($(\"#\" + shortName + \"_\" + name + \"_size_\" + idStr).val());\n            }\n            var placeholder = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_placeholder_\" + idStr).exists()) {\n                placeholder = $(\"#\" + shortName + \"_\" + name + \"_placeholder_\" + idStr).val();\n            }\n            var onKeyUp = \"\";\n            if ($(\"#\" + shortName + \"_\" + name + \"_onKeyUp_\" + idStr).exists()) {\n                onKeyUp = $(\"#\" + shortName + \"_\" + name + \"_onKeyUp_\" + idStr).val();\n            }\n\n            var html = \"<input id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"' type='hidden' value=\\\"\" + value + \"\\\"/>\";\n            html += \"<p class='form-control-static'>\" + value + \"</p>\";\n            if (size != 0) {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_size_\" + idStr + \"\\\" \" + \"value=\\\"\" + size + \"\\\"/>\";\n            }\n            if (placeholder != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_placeholder_\" + idStr + \"\\\" \" + \"value=\\\"\" + placeholder + \"\\\"/>\";\n            }\n            if (onKeyUp != \"\") {\n                html += \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_onKeyUp_\" + idStr + \"\\\" \" + \"value=\\\"\" + onKeyUp + \"\\\"/>\";\n            }\n\n            cont.html(html);\n        }\n    });\n}\n\nfunction textToTextArea(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='textarea_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(/^textarea_/, \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var value = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n\n            var html = \"<textarea id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"' class='form-control' style='width: 100%;'>\" + value + \"</textarea>\";\n\n            cont.html(html);\n        }\n    });\n}\n\nfunction textAreaToText(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='textarea_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(/^textarea_/, \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var value = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n\n            //var html = \"<input type='hidden' id='\"+shortName+\"_\"+name+\"_\"+idStr+\"' name='\"+shortName+\"_\"+name+\"_\"+\n            //        idStr+\"' value=\\\"\"+ value +\"\\\"/>\";\n            var html = \"<textarea style='display:none;' id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"'>\" + value + \"</textarea>\";\n            html += \"<div class='form-control-static'>\" + value + \"</div>\";\n\n            cont.html(html);\n        }\n    });\n}\n\n/**\n * Change vocabulary selects to divs of inputs\n *\n * Changes all div's with id \"select_\" for a given data object (shortName, idStr) from a select\n * box (edit mode) to a list of inputs defining the parameters to a select (view mode).\n *\n * This function handles VOCABULARY select boxes ONLY.\n *\n * Note: idStr must not have the \"_\" pre-appended\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int idStr The index within the edit page of the object.\n */\nfunction selectToText(shortName, idStr) {\n    $(\"div[id^='select_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(\"select_\", \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var id = $(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr).val();\n            var term = $(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr + \" option:selected\").text();\n            var vocabtype = $(\"#\" + shortName + \"_\" + name + \"_vocabtype_\" + idStr).val();\n            var minlength = $(\"#\" + shortName + \"_\" + name + \"_minlength_\" + idStr).val();\n\n            var additionalStyle = \"\";\n            var postText = \"\";\n            if (vocabtype == \"name_component\") {\n                additionalStyle = \"name-component-type\";\n                postText = \" :\";\n            }\n\n            cont.html(\"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_id_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_id_\" + idStr + \"\\\" value=\\\"\" + id + \"\\\"/>\" + \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_term_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_term_\" + idStr + \"\\\" value=\\\"\" + term + \"\\\"/>\" + \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_vocabtype_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_vocabtype_\" + idStr + \"\\\" value=\\\"\" + vocabtype + \"\\\"/>\" + \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_minlength_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_minlength_\" + idStr + \"\\\" value=\\\"\" + minlength + \"\\\"/>\" + \"<p class=\\\"form-control-static \" + additionalStyle + \"\\\">\" + term + postText + \"</p>\");\n        }\n    });\n}\n\nvar geoPlaceLoadResults = null;\n\nfunction textToGeoPlaceSelect(shortName, idStr) {\n    $(\"#\" + shortName + \"_datapart_\" + idStr + \" div[id^='selectGeo_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(\"selectGeo_\", \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var id = $(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr).val();\n            var term = $(\"#\" + shortName + \"_\" + name + \"_term_\" + idStr).val();\n            var placeholder = \"Select Geo Place Term\";\n\n            var confirmed = $(\"#\" + shortName + \"_confirmed_\" + idStr).val() == \"true\" ? true : false;\n            var firstOptionSelect = \"\";\n            var secondOptionSelect = \" selected\";\n            if (!confirmed) {\n                firstOptionSelect = \" selected\";\n                secondOptionSelect = \"\";\n            }\n\n            cont.html(\"<select id='\" + shortName + \"_\" + name + \"_id_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_id_\" + idStr + \"' class='form-control' data-placeholder='\" + placeholder + \"'>\" + \"<option\" + firstOptionSelect + \"></option>\" + \"<option value=\\\"\" + id + \"\\\"\" + secondOptionSelect + \">\" + term + \"</option>\" + \"</select>\");\n\n            geovocab_select_replace($(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr), \"_\" + idStr);\n        }\n    });\n}\n\nfunction geoPlaceSelectToText(shortName, idStr) {\n    $(\"div[id^='selectGeo_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(\"selectGeo_\", \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var id = $(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr).val();\n            var term = $(\"#\" + shortName + \"_\" + name + \"_id_\" + idStr + \" option:selected\").text();\n\n            cont.html(\"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_id_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_id_\" + idStr + \"\\\" value=\\\"\" + id + \"\\\"/>\" + \"<input type=\\\"hidden\\\" id=\\\"\" + shortName + \"_\" + name + \"_term_\" + idStr + \"\\\" \" + \"name=\\\"\" + shortName + \"_\" + name + \"_term_\" + idStr + \"\\\" value=\\\"\" + term + \"\\\"/>\");\n        }\n    });\n}\n\n/**\n * Make a data object editable\n *\n * Make the GUI pane for a given constellation object (short, i) editable.  Sets up the edit and delete\n * buttons for first-order data objects.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @return boolean         False to play nice with the browser\n */\nfunction makeEditable(short, i) {\n    // No editing if it's already in edit mode\n    if ($(\"#\" + short + \"_operation_\" + i).val() == \"update\") return false;\n    // If it's deleted, then you better undelete it first\n    if ($(\"#\" + short + \"_operation_\" + i).val() == \"delete\") setDeleted(short, i);\n\n    $(\"#\" + short + \"_editbutton_\" + i).removeClass(\"list-group-item-info\").addClass(\"list-group-item-warning\");\n    $(\"#\" + short + \"_editbutton_\" + i).html(\"<span class=\\\"fa fa-2x fa-undo\\\"></span><br>Undo\");\n    $(\"#\" + short + \"_editbutton_\" + i).off('click').on(\"click\", function () {\n        undoEdit(short, i);\n    });\n    $(\"#\" + short + \"_deletebutton_\" + i).removeClass(\"list-group-item-danger\").addClass(\"disabled\");\n    $(\"#\" + short + \"_deletebutton_\" + i).off('click').on(\"click\", function () {\n        return false;\n    });\n\n    $(\"#\" + short + \"_panel_\" + i).removeClass(\"panel-default\").addClass(\"alert-info\").addClass(\"edited-component\");\n\n    return subMakeEditable(short, i);\n}\n\n/**\n * Make a data object editable\n *\n * Make the GUI pane for a given constellation object (short, i) editable.  Handles removing the read-only\n * statuses and changing divs into selects.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @return boolean         False to play nice with the browser\n */\nfunction subMakeEditable(short, i) {\n    // No editing if it's already in edit mode\n    if ($(\"#\" + short + \"_operation_\" + i).val() == \"update\") return false;\n\n    // Add to the undo set\n    undoSet[short + \"-\" + i] = $(\"#\" + short + \"_datapart_\" + i).clone();\n\n    textToInput(short, i);\n    textToTextArea(short, i);\n    textToCheckbox(short, i);\n\n    var idstr = \"_\" + i;\n\n    // Enable buttons\n    $(\"#\" + short + \"_datapart_\" + i + \" button[id^='\" + short + \"_']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            obj.removeAttr(\"disabled\").removeClass(\"snac-hidden\");\n        }\n    });\n    // Enable buttons\n    $(\"#\" + short + \"_datapart_\" + i + \" a.label\").each(function () {\n        $(this).removeClass(\"snac-hidden\");\n    });\n\n    // Enable checkboxes\n    $(\"#\" + short + \"_datapart_\" + i + \" input[type='checkbox']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            obj.bootstrapToggle('enable');\n        }\n    });\n\n    // Turn on CodeMirror Editors\n    $(\"#\" + short + \"_datapart_\" + i + \" textarea[id^='\" + short + \"_']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name from the string we're parsing\n            var idStr = obj.attr('id').replace(short, \"\");\n            if (idStr.indexOf('_text_') != -1 || idStr.indexOf('_source_') != -1) {\n                obj.get(0).CodeMirror = CodeMirror.fromTextArea(obj.get(0), {\n                    lineNumbers: true,\n                    lineWrapping: true,\n                    viewportMargin: Infinity,\n                    mode: { name: \"xml\" }\n                });\n            }\n        }\n    });\n    var sawSelect = false;\n    $(\"#\" + short + \"_datapart_\" + i + \" select[id^='\" + short + \"_']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            sawSelect = true;\n        }\n    });\n\n    if (!sawSelect) {\n        textToSelect(short, i);\n        textToGeoPlaceSelect(short, i);\n        textToDate(short, i);\n    }\n\n    // Make things re-orderable if something exists\n    // $( \"#nameEntry_component_ui_0\" ).sortable({  // id of the container containing sortable things\n    //      items       : '.name_component'         // class of the things that are sortable.  They MUST have ids\n    // });\n    $(\"#\" + short + \"_datapart_\" + i + \" span.move-handle\").each(function () {\n        $(this).removeClass(\"snac-hidden\");\n    });\n    $(\"#\" + short + \"_reorderable_\" + i).sortable({\n        items: '.reorderable',\n        opacity: 0.5,\n        update: function (event, ui) {\n            var neworder = $(\"#\" + short + \"_reorderable_\" + i).sortable(\"toArray\");\n            console.log(neworder);\n            neworder.forEach(function (orderedID, index) {\n                $(\"#\" + orderedID + \" input.order-index\").val(index);\n            });\n            if (short == \"nameEntry\") updateNameEntryHeading(i);\n        }\n    });\n\n    // Make the relation pictures update appropriately\n    if (short == 'constellationRelation') {\n        // make the role dropdown affect the picture\n        $('#' + short + '_type_id_' + i).change(function () {\n            updatePictureArrow(short, i, $('#' + short + '_type_id_' + i + ' option:selected').text());\n        });\n    }\n    if (short == 'resourceRelation') {\n        // make the role dropdown affect the picture\n        $('#' + short + '_role_id_' + i).change(function () {\n            updatePictureArrow(short, i, $('#' + short + '_role_id_' + i + ' option:selected').text());\n        });\n    }\n    // Places should update the place heading\n    if (short == 'place') {\n        // If there is a value pre-set, then automatically confirm and update\n        if ($('#' + short + '_geoplace_id_' + i).val() != null && $('#' + short + '_geoplace_id_' + i).val() != \"\") {\n            updatePlaceHeading(short, i, $('#' + short + '_geoplace_id_' + i).val());\n        }\n        // make the role dropdown affect the picture\n        $('#' + short + '_geoplace_id_' + i).change(function () {\n            updatePlaceHeading(short, i, $('#' + short + '_geoplace_id_' + i).val());\n        });\n    }\n\n    // add parser btn if nameEntry is a computed name, entity is person, and if no btn or extra name components already exist\n    if (short === 'nameEntry' && $(\"#entityType\").val() === \"700\" && $(\"#nameEntry_component_0_panel_\" + i).find('select:first').text() === \"Name\" && !$(\"#nameEntry_panel_\" + i).find('.name-parser').length && $(\"#nameEntry_component_1_panel_\" + i).length === 0) {\n        $('#nameEntry_component_add_' + i).after('<button class=\"btn btn-primary name-parser\" id=\"nameEntry_parse_' + i + '\" style=\"margin-left:5px;\"> <i class=\"fa fa-magic\" aria-hidden=\"true\"></i> Parse </button>');\n    }\n\n    // Set this data's operation value appropriately\n    if ($(\"#\" + short + \"_id_\" + i).val() != \"\") $(\"#\" + short + \"_operation_\" + i).val(\"update\");else $(\"#\" + short + \"_operation_\" + i).val(\"insert\");\n\n    // Asked to edit something, so make it globally known\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n\n    return false;\n}\n\n/**\n * Make a data object uneditable\n *\n * Make each object in the GUI page for the given piece uneditable by turning them back to text.  Also\n * takes the color away from the pane and removes the operation flag.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @return boolean         False to play nice with the browser\n */\nfunction subMakeUneditable(shortName, i) {\n\n    // Make inputs read-only\n    var idstr = \"_\" + i;\n\n    // Turn off the reordering js\n    $(\"#\" + shortName + \"_datapart_\" + i + \" span.move-handle\").each(function () {\n        $(this).addClass(\"snac-hidden\");\n    });\n    if ($(\"#\" + shortName + \"_reorderable_\" + i).hasClass(\"ui-sortable\")) $(\"#\" + shortName + \"_reorderable_\" + i).sortable(\"destroy\");\n\n    // Remove CodeMirror editors\n    $(\"#\" + shortName + \"_datapart_\" + i + \" textarea[id^='\" + shortName + \"_']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\") && (obj.attr('id').indexOf('_text_') != -1 || obj.attr('id').indexOf('_source_') != -1)) {\n\n            if (obj.get(0).CodeMirror) {\n                obj.get(0).CodeMirror.toTextArea();\n            }\n            //(document.getElementById(obj.attr('id'))).CodeMirror.toTextArea();\n            //obj.get(0).CodeMirror.toTextArea();\n        }\n    });\n    // Disable buttons\n    $(\"#\" + shortName + \"_datapart_\" + i + \" button[id^='\" + shortName + \"_']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            obj.attr(\"disabled\", \"true\").addClass(\"snac-hidden\");\n        }\n    });\n\n    // Disable buttons\n    $(\"#\" + shortName + \"_datapart_\" + i + \" a.label\").each(function () {\n        $(this).addClass(\"snac-hidden\");\n    });\n\n    // Disable checkboxes\n    $(\"#\" + shortName + \"_datapart_\" + i + \" input[type='checkbox']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            obj.bootstrapToggle(\"disable\");\n        }\n    });\n\n    inputToText(shortName, i);\n    textAreaToText(shortName, i);\n    checkboxToText(shortName, i);\n    // Check for a select box\n    var sawSelect = false;\n    $(\"#\" + shortName + \"_datapart_\" + i + \" select[id^='\" + shortName + \"_']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            sawSelect = true;\n        }\n    });\n    // If a select box was seen, undo it\n    if (sawSelect) {\n        selectToText(shortName, i);\n        geoPlaceSelectToText(shortName, i);\n        dateToText(shortName, i);\n    }\n\n    // Clear the operation flags\n    //$(\"#\" + shortName + \"_operation_\" + i).val(\"\");\n    $(\"#\" + shortName + \"_datapart_\" + i + \" input[id^='\" + shortName + \"_']\").each(function () {\n        var obj = $(this);\n        if (obj.attr('id').endsWith(\"_operation\" + idstr) && !obj.attr('id').endsWith(\"ZZ\")) {\n            obj.val(\"\");\n        }\n    });\n\n    $(\"#\" + shortName + \"_panel_\" + i).addClass(\"panel-default\").removeClass(\"alert-info\").removeClass(\"edited-component\");\n}\n\n/**\n * Make a data object uneditable\n *\n * Make the GUI pane for a given constellation object (short, i) un-editable.  Sets up the edit and delete\n * buttons for first-order data objects, and calls the function to turn the elements back to text.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @return boolean         False to play nice with the browser\n */\nfunction makeUneditable(shortName, i) {\n    // Make inputs read-only\n    var idstr = \"_\" + i;\n\n    subMakeUneditable(shortName, i);\n\n    // restore the edit button\n    $(\"#\" + shortName + \"_editbutton_\" + i).addClass(\"list-group-item-info\").removeClass(\"list-group-item-warning\");\n    $(\"#\" + shortName + \"_editbutton_\" + i).html(\"<span class=\\\"fa fa-2x fa-pencil-square-o\\\"></span><br>Edit\");\n    $(\"#\" + shortName + \"_editbutton_\" + i).off('click').on(\"click\", function () {\n        makeEditable(shortName, i);\n    });\n\n    // restore the delete button\n    $(\"#\" + shortName + \"_deletebutton_\" + i).addClass(\"list-group-item-danger\").removeClass(\"disabled\");\n    $(\"#\" + shortName + \"_deletebutton_\" + i).off('click').on(\"click\", function () {\n        setDeleted(shortName, i);\n    });\n\n    return false;\n}\n\n/**\n * Make an SCM data object editable\n *\n * Make the GUI pane for an SCM (j) of a given constellation object (short, i) editable.  Sets up the edit and delete\n * buttons for first-order data objects.\n *\n * @param string shortName  The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i      The index within the edit page of the object.\n * @param string|int j      The index within the data object SCM list on the edit page of the SCM object.\n * @return boolean          False to play nice with the browser\n */\nfunction makeSCMEditable(shortName, i, j) {\n    var id = j + \"_\" + i;\n    var scmShortName = \"scm_\" + shortName;\n\n    // No editing if it's already in edit mode\n    if ($(\"#\" + scmShortName + \"_operation_\" + id).val() == \"update\") return false;\n    // If it's deleted, then you better undelete it first\n    if ($(\"#\" + scmShortName + \"_operation_\" + id).val() == \"delete\") setSCMDeleted(shortName, i, j);\n\n    $(\"#\" + scmShortName + \"_editbutton_\" + id).removeClass(\"list-group-item-info\").addClass(\"list-group-item-warning\");\n    $(\"#\" + scmShortName + \"_editbutton_\" + id).html(\"<span class=\\\"fa fa-undo\\\"></span>\");\n    $(\"#\" + scmShortName + \"_editbutton_\" + id).off('click').on(\"click\", function () {\n        undoSCMEdit(shortName, i, j);\n    });\n    $(\"#\" + scmShortName + \"_deletebutton_\" + id).removeClass(\"list-group-item-danger\").addClass(\"disabled\");\n    $(\"#\" + scmShortName + \"_deletebutton_\" + id).off('click').on(\"click\", function () {\n        return false;\n    });\n\n    $(\"#\" + scmShortName + \"_panel_\" + id).removeClass(\"panel-default\").addClass(\"alert-info\").addClass(\"edited-component\");\n\n    return subMakeEditable(scmShortName, id);\n}\n\n/**\n * Make an SCM data object un-editable\n *\n * Make the GUI pane for an SCM object (j) for a given constellation object (short, i) un-editable.  Sets up the edit and delete\n * buttons for SCM data objects.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @param string|int j      The index within the data object SCM list on the edit page of the SCM object.\n * @return boolean         False to play nice with the browser\n */\nfunction makeSCMUneditable(shortName, i, j) {\n\n    // Make inputs read-only\n    var idstr = j + \"_\" + i;\n\n    subMakeUneditable('scm_' + shortName, idstr);\n\n    // restore the edit button\n    $(\"#scm_\" + shortName + \"_editbutton_\" + idstr).addClass(\"list-group-item-info\").removeClass(\"list-group-item-warning\");\n    $(\"#scm_\" + shortName + \"_editbutton_\" + idstr).html(\"<span class=\\\"fa fa-pencil-square-o\\\"></span>\");\n    $(\"#scm_\" + shortName + \"_editbutton_\" + idstr).off('click').on(\"click\", function () {\n        makeSCMEditable(shortName, i, j);\n    });\n\n    // restore the delete button\n    $(\"#scm_\" + shortName + \"_deletebutton_\" + idstr).addClass(\"list-group-item-danger\").removeClass(\"disabled\");\n    $(\"#scm_\" + shortName + \"_deletebutton_\" + idstr).off('click').on(\"click\", function () {\n        setSCMDeleted(shortName, i, j);\n    });\n\n    return false;\n}\n\n/**\n * Set a Contributor Object as deleted\n *\n * Sets the contributor object (shortName, i) as deleted or undeleted and makes the appropriate changes.\n *\n * @param string shortName The short name of the contributor object.\n * @param string|int i     The index within the edit page of the object.\n */\nfunction setRepeatedDataDeleted(shortName, i) {\n    if ($(\"#\" + shortName + \"_operation_\" + i).val() != \"delete\") {\n        $(\"#\" + shortName + \"_remove_\" + i).removeClass(\"btn-danger\").addClass(\"btn-warning\");\n        $(\"#\" + shortName + \"_remove_\" + i).html(\"<i class=\\\"fa fa-undo\\\" aria-hidden=\\\"true\\\"></i>\");\n    } else {\n        $(\"#\" + shortName + \"_remove_\" + i).removeClass(\"btn-warning\").addClass(\"btn-danger\");\n        $(\"#\" + shortName + \"_remove_\" + i).html(\"<span class=\\\"glyphicon glyphicon-minus-sign\\\"></span>\");\n    }\n\n    return subSetDeleted(shortName, i);\n}\n\n/**\n * Set a first-order data object as deleted\n *\n * Sets a first-order data object (short, i) as deleted or undeleted and makes the appropriate changes throughout the page.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n */\nfunction setDeleted(short, i) {\n    if ($(\"#\" + short + \"_operation_\" + i).val() != \"delete\") {\n        // set deleted\n        $(\"#\" + short + \"_deletebutton_\" + i).removeClass(\"list-group-item-danger\").addClass(\"list-group-item-warning\");\n        $(\"#\" + short + \"_deletebutton_\" + i).html(\"<span class=\\\"fa fa-2x fa-undo\\\"></span><br>Undo\");\n\n        // disable edit button\n        $(\"#\" + short + \"_editbutton_\" + i).removeClass(\"list-group-item-info\").addClass(\"disabled\");\n        $(\"#\" + short + \"_editbutton_\" + i).off('click').on(\"click\", function () {\n            return false;\n        });\n\n        // disable the Date button\n        $(\"#\" + short + \"_datebutton_\" + i).removeClass(\"list-group-item-success\").addClass(\"disabled\").prop('disabled', true);\n\n        // disable the SCM button\n        $(\"#\" + short + \"_scmbutton_\" + i).removeClass(\"list-group-item-success\").addClass(\"disabled\").prop('disabled', true);\n    } else {\n        // set undelete\n        $(\"#\" + short + \"_deletebutton_\" + i).removeClass(\"list-group-item-warning\").addClass(\"list-group-item-danger\");\n        $(\"#\" + short + \"_deletebutton_\" + i).html(\"<span class=\\\"fa fa-2x fa-trash-o\\\"></span><br>Trash\");\n\n        // restore edit button\n        $(\"#\" + short + \"_editbutton_\" + i).addClass(\"list-group-item-info\").removeClass(\"disabled\");\n        $(\"#\" + short + \"_editbutton_\" + i).off('click').on(\"click\", function () {\n            makeEditable(short, i);\n        });\n\n        // restore the Date button\n        $(\"#\" + short + \"_datebutton_\" + i).addClass(\"list-group-item-success\").removeClass(\"disabled\").prop('disabled', false);\n\n        // restore the SCM button\n        $(\"#\" + short + \"_scmbutton_\" + i).addClass(\"list-group-item-success\").removeClass(\"disabled\").prop('disabled', false);\n    }\n\n    return subSetDeleted(short, i);\n}\n\n/**\n * Make the delete/undelete happen\n *\n * Actually performs the changes to the object, affecting the operation and panel color.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @return boolean         False to play nice with the browser\n */\nfunction subSetDeleted(short, i) {\n    if ($(\"#\" + short + \"_operation_\" + i).val() != \"delete\") {\n        // set deleted\n        $(\"#\" + short + \"_panel_\" + i).removeClass(\"panel-default\").addClass(\"alert-danger\").addClass(\"deleted-component\");\n\n        $(\"#\" + short + \"_operation_\" + i).val(\"delete\");\n    } else {\n        // set undelete\n        $(\"#\" + short + \"_panel_\" + i).removeClass(\"alert-danger\").addClass(\"panel-default\").removeClass(\"deleted-component\");\n\n        // If this thing was deleted but is supposed to be an update, then return it back to update status\n        var sawSelect = false;\n        $(\"select[id^='\" + short + \"_']\").each(function () {\n            var obj = $(this);\n            if (obj.attr('id').endsWith(\"_\" + i) && !obj.attr('id').endsWith(\"ZZ\")) {\n                sawSelect = true;\n            }\n        });\n        if (sawSelect) {\n            if ($(\"#\" + short + \"_id_\" + i).val() != \"\") $(\"#\" + short + \"_operation_\" + i).val(\"update\");else $(\"#\" + short + \"_operation_\" + i).val(\"insert\");\n        } else {\n            $(\"#\" + short + \"_operation_\" + i).val(\"\");\n        }\n    }\n\n    // Asked to delete something, so make it globally known\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n\n    return false;\n}\n\n/**\n * Set an SCM data object as deleted\n *\n * Sets an SCM object (j) for a constellation object (short, i) as deleted or undeleted and makes the appropriate changes throughout the page.\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @param string|int j      The index within the data object SCM list on the edit page of the SCM object.\n */\nfunction setSCMDeleted(short, i, j) {\n    var id = j + '_' + i;\n    if ($(\"#scm_\" + short + \"_operation_\" + id).val() != \"delete\") {\n        // set deleted\n        $(\"#scm_\" + short + \"_deletebutton_\" + id).removeClass(\"list-group-item-danger\").addClass(\"list-group-item-warning\");\n        $(\"#scm_\" + short + \"_deletebutton_\" + id).html(\"<span class=\\\"fa fa-undo\\\"></span>\");\n\n        // disable edit button\n        $(\"#scm_\" + short + \"_editbutton_\" + id).removeClass(\"list-group-item-info\").addClass(\"disabled\");\n        $(\"#scm_\" + short + \"_editbutton_\" + id).off('click').on(\"click\", function () {\n            return false;\n        });\n    } else {\n        // set undelete\n        $(\"#scm_\" + short + \"_deletebutton_\" + id).removeClass(\"list-group-item-warning\").addClass(\"list-group-item-danger\");\n        $(\"#scm_\" + short + \"_deletebutton_\" + id).html(\"<span class=\\\"fa fa-trash-o\\\"></span>\");\n\n        // restore edit button\n        $(\"#scm_\" + short + \"_editbutton_\" + id).addClass(\"list-group-item-info\").removeClass(\"disabled\");\n        $(\"#scm_\" + short + \"_editbutton_\" + id).off('click').on(\"click\", function () {\n            makeSCMEditable(short, i, j);\n        });\n    }\n\n    return subSetDeleted(\"scm_\" + short, id);\n}\n\n/**\n * Turn on the Edit/Delete buttons for an object\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n */\nfunction turnOnButtons(shortName, i) {\n\n    // Turn on the edit button\n    $(\"#\" + shortName + \"_editbutton_\" + i).on(\"click\", function () {\n        makeEditable(shortName, i);\n    });\n\n    // Turn on the delete buttons\n    $(\"#\" + shortName + \"_deletebutton_\" + i).on(\"click\", function () {\n        setDeleted(shortName, i);\n    });\n}\n\nfunction turnOnTooltips(shortName, i) {\n    // Load tooltips\n    $(function () {\n        $('#' + shortName + '_panel_' + i + ' [data-toggle=\"tooltip\"]').tooltip();\n    });\n\n    // Load popovers\n    $(function () {\n        $('#' + shortName + '_panel_' + i + ' [data-toggle=\"popover\"]').popover({\n            trigger: 'hover',\n            container: 'body'\n        });\n    });\n}\n\n/**\n * Turn on the Edit/Delete buttons for an SCM object\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int i     The index within the edit page of the object.\n * @param string|int j      The index within the data object SCM list on the edit page of the SCM object.\n */\nfunction turnOnSCMButtons(shortName, i, j) {\n\n    // Turn on the edit button\n    $(\"#scm_\" + shortName + \"_editbutton_\" + j + \"_\" + i).on(\"click\", function () {\n        makeSCMEditable(shortName, i, j);\n    });\n\n    // Turn on the delete buttons\n    $(\"#scm_\" + shortName + \"_deletebutton_\" + j + \"_\" + i).on(\"click\", function () {\n        setSCMDeleted(shortName, i, j);\n    });\n}\n\n/**\n * Create a new Address Line object on page\n *\n * Puts a new Place Address Line object DIV on the page and attaches it correctly to the DOM and javascript.\n *\n * @param  int     i    The index on the page of the place to add this component to\n * @return boolean      false to play nice with the browser.\n */\nfunction newAddressLine(i) {\n    var nextid = 1;\n    if ($('#place_address_next_j_' + i).exists()) {\n        nextid = parseInt($('#place_address_next_j_' + i).text());\n    }\n    console.log(\"Creating new address line for place \" + i + \" with id: \" + nextid);\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n    var text = $('#addressline_template').clone();\n    var html = text.html().replace(/ZZ/g, i).replace(/YY/g, nextid);\n    $('#place_address_add_div_' + i).before(html);\n\n    $('#place_address_' + nextid + '_operation_' + 1).val(\"insert\");\n    subMakeEditable(\"place_address_\" + nextid, i);\n\n    vocab_select_replace($(\"#place_address_\" + nextid + \"_type_id_\" + i), \"_\" + i, 'address_part', 0);\n\n    // Put the updated version number back in the DOM\n    $('#place_address_next_j_' + i).text(++nextid);\n\n    return false;\n}\n\n/**\n * Create a new Resource Relation Origination Name object on page\n *\n * Puts a new Resource Relation Origination Name object DIV on the page and attaches it correctly to the DOM and javascript.\n *\n * @param  int     i    The index on the page of the Resource Relation to add this Origination Name to\n * @return boolean      false to play nice with the browser.\n */\nfunction newOriginationName(i) {\n    var nextid = 1;\n    if ($('#resource_originationName_next_j_' + i).exists()) {\n        nextid = parseInt($('#resource_originationName_next_j_' + i).text());\n    }\n    console.log(\"Creating new origination name for resource \" + i + \" with id: \" + nextid);\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n    var text = $('#originationName_template').clone();\n    var html = text.html().replace(/ZZ/g, i).replace(/YY/g, nextid);\n    $('#resource_originationName_add_div_' + i).before(html);\n\n    $('#resource_originationName_' + nextid + '_operation_' + 1).val(\"insert\");\n    subMakeEditable(\"resource_originationName_\" + nextid, i);\n\n    // Put the updated version number back in the DOM\n    $('#resource_originationName_next_j_' + i).text(++nextid);\n\n    return false;\n}\n\n/**\n * Create a new Name Entry Component object on page\n *\n * Puts a new Name Entry component object DIV on the page and attaches it correctly to the DOM and javascript.\n *\n * @param  int     i    The index on the page of the nameEntry to add this component to\n * @return boolean      false to play nice with the browser.\n */\nfunction newNameEntryComponent(i) {\n    removeParserButton(i);\n    var nextid = 1;\n    if ($('#nameEntry_component_next_j_' + i).exists()) {\n        nextid = parseInt($('#nameEntry_component_next_j_' + i).text());\n    }\n    console.log(\"Creating new name entry component for nameEntry \" + i + \" with id: \" + nextid);\n\n    // add parser btn if entity is person, and if no btn or other name components already exist\n    if ($(\"#entityType\").val() === \"700\" && nextid == 0 && !$(\"#nameEntry_panel_\" + i).find('.name-parser').length && $(\"#nameEntry_component_1_panel_\" + i).length === 0) {\n        $('#nameEntry_component_add_' + i).after('<button class=\"btn btn-primary name-parser\" id=\"nameEntry_parse_' + i + '\" style=\"margin-left:5px;\"> <i class=\"fa fa-magic\" aria-hidden=\"true\"></i> Parse </button>');\n    }\n\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n\n    var text = $('#component_template').clone();\n    var html = text.html().replace(/ZZ/g, i).replace(/YY/g, nextid);\n    $('#nameEntry_component_add_div_' + i).before(html);\n\n    $('#nameEntry_component_' + nextid + '_operation_' + 1).val(\"insert\");\n    subMakeEditable(\"nameEntry_component_\" + nextid, i);\n\n    vocab_select_replace($(\"#nameEntry_component_\" + nextid + \"_type_id_\" + i), \"_\" + i, 'name_component', 0);\n\n    // Put the updated version number back in the DOM\n    $('#nameEntry_component_next_j_' + i).text(++nextid);\n\n    return false;\n}\n\nfunction updateNameEntryHeading(i) {\n    var text = \"\";\n    var components = [];\n\n    $(\"#nameEntry_panel_\" + i + \" div[id^='nameEntry_component_']\").each(function () {\n        var obj = $(this);\n        if (!obj.hasClass(\"deleted-component\") && obj.attr('id').endsWith(\"_panel_\" + i) && !obj.attr('id').endsWith(\"ZZ\")) {\n            var j = obj.attr('id').replace(\"nameEntry_component_\", \"\").replace(\"_panel_\" + i, \"\");\n            var type = $(\"#nameEntry_component_\" + j + \"_type_id_\" + i + \" option:selected\").text();\n            var partText = $(\"#nameEntry_component_\" + j + \"_text_\" + i).val();\n\n            components.push([type, partText]);\n        }\n    });\n\n    var entityType = $(\"#entityType option:selected\").text();\n    text = combineNameHeading(components, entityType);\n\n    $(\"#nameEntry_heading_\" + i).text(text.trim());\n    $(\"#nameEntry_original_\" + i).val(text.trim());\n}\n\n/**\n * Create a new Name Entry Rules object on page\n *\n * Puts a new Name Entry rule object DIV on the page and attaches it correctly to the DOM and javascript.\n *\n * @param  int     i    The index on the page of the nameEntry to add this rule to\n * @return boolean      false to play nice with the browser.\n */\nfunction newNameEntryRule(i) {\n    var nextid = 1;\n    if ($('#nameEntry_rule_next_j_' + i).exists()) {\n        nextid = parseInt($('#nameEntry_rule_next_j_' + i).text());\n    }\n    console.log(\"Creating new name entry rule for nameEntry \" + i + \" with id: \" + nextid);\n    setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n    var text = $('#rule_template').clone();\n    var html = text.html().replace(/ZZ/g, i).replace(/YY/g, nextid);\n    $('#nameEntry_rule_add_div_' + i).before(html);\n\n    $('#nameEntry_rule_' + nextid + '_operation_' + 1).val(\"insert\");\n    turnOnTooltips(\"nameEntry_rule_\" + nextid, i);\n    subMakeEditable(\"nameEntry_rule_\" + nextid, i);\n\n    // Put the updated version number back in the DOM\n    $('#nameEntry_rule_next_j_' + i).text(++nextid);\n\n    return false;\n}\n\n/**\n * Parse a date string into parts\n */\nfunction parseDate(dateString) {\n    var pieces = dateString.split(\"-\");\n    if (pieces.length == 3) return {\n        year: parseInt(pieces[0]),\n        month: parseInt(pieces[1]),\n        day: parseInt(pieces[2])\n    };else if (pieces.length == 2) return {\n        year: parseInt(pieces[0]),\n        month: parseInt(pieces[1]),\n        day: ''\n    };else if (pieces.length == 1 && pieces[0] != '') return {\n        year: parseInt(pieces[0]),\n        month: '',\n        day: ''\n    };else return {\n        year: '', month: '', day: ''\n    };\n}\n\n/**\n * Change date input divs to select and boxes\n *\n * Changes all div's with id \"date_\" for a given data object (shortName, idStr) from a list of\n * inputs defining the parameters (view mode) to a inputs and a select (edit mode).  It then\n * calls the select2 function to replace the select with one matching the rest of the page.\n *\n * Note: idStr must not have the \"_\" pre-appended\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int idStr The index within the edit page of the object.\n */\nfunction textToDate(shortName, idStr) {\n    $(\"div[id^='date_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(\"date_\", \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n            var dateStr = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n\n            var dateParts = parseDate(dateStr);\n\n            var html = \"<input type='text' size='4' style='width:20%;display:inline;' placeholder='YYYY' id='\" + shortName + \"_\" + name + \"_year_\" + idStr + \"' class='form-control' value='\" + dateParts.year + \"'>\";\n            html += \"<span class='form-control-static'> - </span>\";\n            html += \"<select id='\" + shortName + \"_\" + name + \"_month_\" + idStr + \"' class='form-control' data-placeholder='Month' style='width: 57%; margin-bottom: 5px; display: inline-block;'>\" + \"<option></option>\";\n            var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n            months.forEach(function (value, key) {\n                var mInt = key + 1;\n\n                if (mInt == dateParts.month) html += \"<option value=\\\"\" + mInt + \"\\\" selected>\" + value + \"</option>\";else html += \"<option value=\\\"\" + mInt + \"\\\">\" + value + \"</option>\";\n            });\n            html += \"<select> \";\n            html += \"<span class='form-control-static'> - </span>\";\n            html += \"<input type='text' style='width:14%;display:inline;' size='2' placeholder='DD' id='\" + shortName + \"_\" + name + \"_day_\" + idStr + \"' class='form-control' value='\" + dateParts.day + \"'> \";\n            html += \"<input type='hidden' id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"' value='\" + dateStr + \"'>\";\n            cont.html(html);\n\n            $(\"#\" + shortName + \"_\" + name + \"_month_\" + idStr).select2({\n                width: '57%',\n                allowClear: true,\n                theme: 'bootstrap',\n                placeholder: 'Month'\n            });\n        }\n    });\n}\n\n/**\n * Pad an integer\n *\n * This is a helper function to pad an integer with 0s for display.  This is useful to pad\n * a month or day with a leading 0.\n *\n * @param int|string num The number to pad\n * @param int size The total width of the desired output\n * @return string A string containing a size-wide integer representation, 0-padded\n */\nfunction pad(num, size) {\n    var s = num + \"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\n\n/**\n * Updates the standard date input field\n *\n * If the date for the data object (shortName, idStr) has been turned into a 3-field edit\n * area, then this function will update the hidden standard date (YYYY-MM-DD) field with the\n * newest values from the human-enterable field.\n *\n * Note: idStr must not have the \"_\" pre-appended\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int idStr The index within the edit page of the object.\n */\nfunction updateDate(shortName, idStr) {\n    $(\"div[id^='date_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(\"date_\", \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n\n            if ($(\"#\" + shortName + \"_\" + name + \"_year_\" + idStr).exists()) {\n                var year = $(\"#\" + shortName + \"_\" + name + \"_year_\" + idStr).val();\n                var day = $(\"#\" + shortName + \"_\" + name + \"_day_\" + idStr).val();\n                var month = $(\"#\" + shortName + \"_\" + name + \"_month_\" + idStr + \" option:selected\").val();\n\n                var dateStr = \"\";\n                if (year != \"\") {\n                    dateStr += pad(year, 4);\n                    if (month != \"\") {\n                        dateStr += \"-\" + pad(month, 2);\n                        if (day != \"\") {\n                            dateStr += \"-\" + pad(day, 2);\n                        }\n                    }\n                }\n\n                $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val(dateStr);\n            }\n        }\n    });\n}\n\n/**\n * Return editable date area back to text\n *\n * If the date for the data object (shortName, idStr) has been turned into a 3-field edit\n * area, then this function will return the editable area back to the view mode text, replacing\n * the edit boxes with a paragraph containing the computed standard date string (YYYY-MM-DD).\n *\n * Note: idStr must not have the \"_\" pre-appended\n *\n * @param string shortName The short name of the data object, such as \"nameEntry\" or \"occupation\"\n * @param string|int idStr The index within the edit page of the object.\n */\nfunction dateToText(shortName, idStr) {\n    $(\"div[id^='date_\" + shortName + \"']\").each(function () {\n        var cont = $(this);\n        if (cont.attr('id').endsWith(\"_\" + idStr) && !cont.attr('id').endsWith(\"ZZ\")) {\n            // remove the short name and \"select_\" from the string we're parsing\n            var divStr = cont.attr('id').replace(\"date_\", \"\").replace(shortName + \"_\", \"\");\n            // remove the idstr to receive the name of this element\n            var regex = new RegExp(\"\\_\" + idStr + \"$\", \"g\");\n            var name = divStr.replace(regex, \"\");\n\n            updateDate(shortName, idStr);\n\n            var dateStr = $(\"#\" + shortName + \"_\" + name + \"_\" + idStr).val();\n\n            var html = \"<p class='form-control-static'>\" + dateStr + \"</p>\";\n            html += \"<input type='hidden' id='\" + shortName + \"_\" + name + \"_\" + idStr + \"' name='\" + shortName + \"_\" + name + \"_\" + idStr + \"' value='\" + dateStr + \"'>\";\n            cont.html(html);\n        }\n    });\n}\n\n// TODO: If we want to show a DIV of edited and deleted components, we should use the following two functions\n// to get copies of the edited/deleted components from the page.  We can then insert those copies onto a modal\n// dialog box with a \"Save\" or \"Continue\" button at the top and bottom.\n//\n// All the pieces shown in the dialog should be disabled.  One way to do this would be using the following\n// method to place a semi-transparent div on top of the editable pieces, making them appear to be grayed out\n// and with the not permitted cursor.\n//\n// .append('<div style=\"position:absolute; top:0; left:0; width:100%; height:100%; background:#f3f3f3; z-index:500; cursor:not-allowed;opacity:0.4;filter: alpha(opacity = 50)\"></div>');\n//\n// Note: this modal should NOT be inside the constellation form so that we don't submit the values twice.\n\n/**\n * Get all the edited components\n */\nfunction getEdited() {\n    var html = \"\";\n\n    $(\"#constellation_form div.edited-component\").each(function () {\n        var cont = $(this);\n        console.log(cont.attr('id'));\n        var pieces = cont.attr('id').split(\"_panel_\");\n        if (pieces.length == 2) {\n            html += \"<div class='panel panel-body edited-component'>\" + $(\"#\" + pieces[0] + \"_datapart_\" + pieces[1]).html() + \"</div>\";\n        }\n    });\n\n    return html;\n}\n\n/**\n * Get all the deleted components\n */\nfunction getDeleted() {\n    var html = \"\";\n\n    $(\"#constellation_form div.deleted-component\").each(function () {\n        var cont = $(this);\n        console.log(cont.attr('id'));\n        var pieces = cont.attr('id').split(\"_panel_\");\n        if (pieces.length == 2) {\n            html += \"<div class='panel panel-body deleted-component'>\" + $(\"#\" + pieces[0] + \"_datapart_\" + pieces[1]).html() + \"</div>\";\n        }\n    });\n\n    return html;\n}\n\nfunction turnOnEditDeleteButtons(part = '') {\n    var divID = '';\n    if (part != '') divID = \"#\" + part + \" \";\n    // Turn on the edit buttons\n    $(divID + \"a[id*='editbutton']\").each(function () {\n        var obj = $(this);\n        var pieces = obj.attr('id').split(\"_\");\n\n        if (pieces.length == 3) {\n            var short = pieces[0];\n            var i = pieces[2];\n            obj.on(\"click\", function () {\n                makeEditable(short, i);\n            });\n        } else if (pieces.length == 5 && pieces[0] == \"scm\") {\n            var short = pieces[1];\n            var i = pieces[4];\n            var j = pieces[3];\n            obj.on(\"click\", function () {\n                makeSCMEditable(short, i, j);\n            });\n        } else if (pieces.length == 5) {\n            var short = pieces[0] + \"_\" + pieces[1] + \"_\" + pieces[2];\n            var i = pieces[4];\n            obj.on(\"click\", function () {\n                makeEditable(short, i);\n            });\n        }\n    });\n\n    // Turn on the delete buttons\n    $(divID + \"a[id*='deletebutton']\").each(function () {\n        var obj = $(this);\n        var pieces = obj.attr('id').split(\"_\");\n\n        if (pieces.length == 3) {\n            var short = pieces[0];\n            var i = pieces[2];\n            obj.on(\"click\", function () {\n                setDeleted(short, i);\n            });\n        } else if (pieces.length == 5 && pieces[0] == \"scm\") {\n            var short = pieces[1];\n            var i = pieces[4];\n            var j = pieces[3];\n            obj.on(\"click\", function () {\n                setSCMDeleted(short, i, j);\n            });\n        } else if (pieces.length == 5) {\n            var short = pieces[0] + \"_\" + pieces[1] + \"_\" + pieces[2];\n            var i = pieces[4];\n            obj.on(\"click\", function () {\n                setDeleted(short, i);\n            });\n        }\n    });\n}\n\nfunction turnOnTooltipsForTab(part = '') {\n    var divID = '';\n    if (part != '') divID = \"#\" + part + \" \";\n    // Load tooltips\n    $(function () {\n        $(divID + '[data-toggle=\"tooltip\"]').tooltip();\n    });\n\n    // Load popovers\n    $(function () {\n        $(divID + '[data-toggle=\"popover\"]').popover({\n            trigger: 'hover',\n            container: 'body'\n        });\n    });\n}\n\nfunction updatePictureArrow(shortName, i, newValue) {\n    $('#' + shortName + '_relationPictureArrow_' + i).text(newValue);\n}\n\nfunction updatePictureTitle(shortName, i, newValue) {\n    $('#' + shortName + '_relationPictureTitle_' + i).text(newValue);\n}\n\nfunction updatePictureIcon(shortName, i, entityType) {\n    var html = \"\";\n    if (entityType == 'person') html = '<i class=\"fa fa-user\" aria-hidden=\"true\"></i><br/>';else if (entityType == 'corporateBody') html = '<i class=\"fa fa-building\" aria-hidden=\"true\"></i><br/>';else if (entityType == 'family') html = '<i class=\"fa fa-users\" aria-hidden=\"true\"></i><br/>';\n    $('#' + shortName + '_relationPictureIcon_' + i).html(html);\n}\n\nvar geoPlaceLoadResults = null;\n\nfunction loadGeoPlaceResultCache() {\n    $(\"input[id^='place_geoplace_id_']\").each(function () {\n        var obj = $(this);\n        // Query for term by ajax\n        if (obj.val() != null && obj.val() != \"\") {\n            $.get(snacUrl + \"/vocabulary/read?type=geoPlace&id=\" + obj.val(), null, function (data) {\n                // Check the return value from the ajax. If success, then go to dashboard\n                if (data.term) {\n                    if (!geoPlaceLoadResults) geoPlaceLoadResults = new Array();\n                    geoPlaceLoadResults.push(data.term);\n                }\n            });\n        }\n    });\n}\n\nfunction chooseSuggestedGeoPlace(selectID, idStr, value) {\n    // idStr == id number on the page\n    var obj = $(\"#\" + selectID);\n    obj.select2('destroy');\n    obj.val(value);\n    geovocab_select_replace(obj, \"_\" + idStr);\n    updatePlaceHeading(\"place\", idStr, value);\n}\n\nfunction updatePlaceHeading(shortName, i, newValue) {\n    var place = null;\n    if (!geoPlaceSearchResults && !geoPlaceLoadResults) {\n        $('#' + shortName + '_confirmed_' + i).val(\"false\");\n        $('#' + shortName + '_geoterm_text_' + i).html(\"<em>Unconfirmed</em>\");\n        $('#' + shortName + \"_geoterm_maplink_\" + i).addClass(\"disabled\");\n        $('#' + shortName + \"_geoterm_maplink_\" + i).prop('onclick', null).off(\"click\");\n        if ($('#' + shortName + '_original_' + i).val() != \"\") $('#' + shortName + '_geoterm_caption_' + i).text(\"Recorded as: \" + $('#' + shortName + '_original_' + i).val());else $('#' + shortName + '_geoterm_caption_' + i).text();\n        return;\n    }\n\n    if (geoPlaceSearchResults) {\n        geoPlaceSearchResults.forEach(function (result) {\n            if (result.id == newValue) place = result;\n        });\n    }\n\n    if (!place && geoPlaceLoadResults) {\n        geoPlaceLoadResults.forEach(function (result) {\n            if (result.id == newValue) place = result;\n        });\n    }\n\n    if (!place) {\n        $('#' + shortName + '_confirmed_' + i).val(\"false\");\n        $('#' + shortName + \"_geoterm_maplink_\" + i).addClass(\"disabled\");\n        $('#' + shortName + \"_geoterm_maplink_\" + i).off(\"click\");\n        if ($('#' + shortName + '_original_' + i).val() != \"\") {\n            $('#' + shortName + '_geoterm_text_' + i).html(\"<em>Unconfirmed</em>\");\n            $('#' + shortName + '_geoterm_caption_' + i).text(\"Recorded as: \" + $('#' + shortName + '_original_' + i).val());\n        } else {\n            $('#' + shortName + '_geoterm_text_' + i).text(\"--\");\n            $('#' + shortName + '_geoterm_caption_' + i).text(\"GeoPlace term not specified\");\n        }\n        return;\n    }\n    $('#' + shortName + '_confirmed_' + i).val(\"true\");\n    $('#' + shortName + '_geoterm_text_' + i).text(place.name);\n    $('#' + shortName + '_geoterm_caption_' + i).text(place.administrationCode + \", \" + place.countryCode);\n    if (place.latitude && place.longitude) {\n        $('#' + shortName + \"_geoterm_maplink_\" + i).prop('onclick', null).off(\"click\");\n        $('#' + shortName + \"_geoterm_maplink_\" + i).on(\"click\", function () {\n            openGeoPlaceViewer(place.id);return false;\n        });\n        $('#' + shortName + \"_geoterm_maplink_\" + i).removeClass(\"disabled\");\n    } else {\n        $('#' + shortName + \"_geoterm_maplink_\" + i).addClass(\"disabled\");\n        $('#' + shortName + \"_geoterm_maplink_\" + i).prop('onclick', null).off(\"click\");\n    }\n}\n\nfunction magicDefaultFill(selectID, vocabType) {\n    if (typeof defaults[vocabType] !== undefined) {\n\n        var data = {\n            id: defaults[vocabType].id,\n            text: defaults[vocabType].term\n        };\n\n        // If the selected item exists, then select it. Else, add a new option\n        // and select it.\n        if ($('#' + selectID).find(\"option[value='\" + data.id + \"']\").length) {\n            $('#' + selectID).val(data.id).trigger('change');\n        } else {\n            var newOption = new Option(data.text, data.id, false, true);\n            $('#' + selectID).append(newOption).trigger('change');\n        }\n    }\n}\n\nfunction capitalize(word) {\n    return word[0].toUpperCase() + word.slice(1);\n}\n\nfunction parseName(e) {\n    $('#name-parser-options').text('');\n    var $nameComponents = $(e.target).closest('.name-components');\n\n    var $partType = $nameComponents.find(\"select:last\");\n    var $textbox = $nameComponents.find('input[type=\"text\"]:last');\n\n    var name = $textbox.val();\n\n    var entityType = $('#entityType').text().trim();\n    $('#name-parser-type').text(capitalize(entityType));\n    $('#name-parser-original').text(name);\n\n    var parser = new NameParser();\n    var guesses = parser.guessPerson(name);\n\n    var parsedOption = '';\n\n    var counter = 0;\n    guesses.forEach(function (guess) {\n        // attach name data object to radio\n        for (var key in guess) {\n            if (guess[key] && guess[key].length != 0) {\n                parsedOption += \"<li><span style='font-weight: bold;'>\" + key + \"</span>: \" + guess[key] + \"</li>\";\n            }\n        }\n\n        $('#name-parser-options').append(\"<div class='radio'>\" + \"<label class='radio form-inline' for='name-parser-option-\" + counter + \"'>\" + \"<input type='radio' name='parsed-names' id='name-parser-option-\" + counter + \"'>\" + \"<ul class='list-unstyled'>\" + parsedOption + \"</ul></label> </div>\");\n\n        $('#name-parser-options').find(\"input[type='radio']:last\").data(\"parsed-name\", guess);\n\n        parsedOption = '';\n        counter++;\n    });\n\n    $('#name-parser-options').find(\"input[type='radio']:first\").prop('checked', true);\n\n    $('#parser-accept-btn').unbind('click');\n    $('#parser-accept-btn').on('click', function () {\n        var selectedName = $('#name-parser input[type=\"radio\"]:checked').data('parsed-name');\n        $.get(snacUrl + \"/vocabulary/?type=name_component&entity_type=700\").done(function (data) {\n            acceptParsedName(selectedName, $nameComponents, name, data.results);\n        });\n    });\n}\n\nfunction acceptParsedName(selectedName, $nameComponents, name, nameComponentIDs) {\n    var i = $nameComponents.attr('id').split('_')[2];\n    var $nameComponent = $nameComponents.find('.reorderable'); ///\n    $nameComponent.replaceWith('<div style=\"margin-left:10%; font-size: 14x; font-style:italic; color: #777777;\"> Name: ' + name + '</div>');\n\n    var nameComponentMap = {};\n\n    for (var k = 0; k < nameComponentIDs.length; k++) {\n        nameComponentMap[nameComponentIDs[k].text] = nameComponentIDs[k].id;\n    }\n    // var nameComponentMap = {\n    //     'Surname': 400223,\n    //     'Forename': 400224,\n    //     'NameAddition': 400236,\n    //     'Date': 400237,\n    //     'NameExpansion': 400226,\n    //     'Numeration': 400225\n    // };\n\n    for (var key in selectedName) {\n        if (key == 'NameAdditions') {\n            key = 'NameAddition';\n            for (var j = 0; j < selectedName['NameAdditions'].length; j++) {\n                newNameEntryComponent(i);\n                var option = new Option(key, nameComponentMap[key], false, true);\n                $partType = $nameComponents.find(\"select:last\");\n                $partType.append(option).trigger('change');\n                $textbox = $nameComponents.find(\"input[type='text']:last\");\n                $textbox.val(selectedName[\"NameAdditions\"][j]);\n\n                $partType.append(option).trigger('change');\n            }\n        } else if (selectedName[key] && nameComponentMap[key]) {\n            newNameEntryComponent(i);\n            var option = new Option(key, nameComponentMap[key], false, true);\n            $partType = $nameComponents.find(\"select:last\");\n            $partType.append(option).trigger('change');\n            $textbox = $nameComponents.find(\"input[type='text']:last\");\n            $textbox.val(selectedName[key]);\n\n            $partType.append(option).trigger('change');\n        }\n    }\n\n    $(\"#nameEntry_datapart_\" + i).find(\".name-parser\").remove();\n    updateNameEntryHeading(i);\n}\n\nfunction removeParserButton(i) {\n    $('#nameEntry_datapart_' + i).find('.name-parser').remove();\n}\n\n/**\n * Things to do when the page finishes loading\n */\n$(document).ready(function () {\n    // Load the place cache, if needed\n    loadGeoPlaceResultCache();\n\n    // listen for name-parsing\n    $('#nameEntries').on('click', '.name-parser', function (event) {\n        event.preventDefault();\n        parseName(event);\n        $(\"#name-parser\").modal('toggle');\n    });\n\n    $('#name-parser').on('shown.bs.modal', function () {\n        $('#parser-accept-btn').focus();\n    });\n\n    // If the constellation is in \"insert\" mode, then we should automatically set \"somethingHasBeenEdited\"\n    // to be true...\n    if ($('#operation').val() == 'insert') setEditedFlag(true);\n    //somethingHasBeenEdited = true;\n\n    turnOnEditDeleteButtons();\n\n    // Attach functions to the entityType select\n    if ($('#entityType').exists()) {\n        $('#entityType').change(function () {\n            setEditedFlag(true);\n            //somethingHasBeenEdited = true;\n            // If there is an ID, then we need to set this to update\n            // Else, the main-level operation should be and remain insert\n            if ($('#constellationid').val() != null && $('#constellationid').val() != \"\") {\n                $('#operation').val(\"update\");\n            }\n        });\n    }\n\n    // Name Entry doesn't get any AJAX, since it is pre-loaded\n    var nameEntryid = 1;\n    if ($('#next_nameEntry_i').exists()) {\n        nameEntryid = parseInt($('#next_nameEntry_i').text());\n    }\n    console.log(\"Next NameEntry ID: \" + nameEntryid);\n    if ($('#btn_add_nameEntry').exists()) {\n        $('#btn_add_nameEntry').click(function () {\n            setEditedFlag(true);\n            //somethingHasBeenEdited = true;\n            var text = $('#nameEntry_template').clone();\n            var html = text.html().replace(/ZZ/g, nameEntryid);\n            $('#add_nameEntry_div').after(html);\n            turnOnButtons(\"nameEntry\", nameEntryid);\n            turnOnTooltips(\"nameEntry\", nameEntryid);\n            makeEditable(\"nameEntry\", nameEntryid);\n            nameEntryid = nameEntryid + 1;\n            return false;\n        });\n    }\n\n    // Attach functions to each of the \"+ Add New _______\" buttons\n\n    // Code to handle adding new genders to the page\n    var genderid = 1;\n    var genderOpen = false;\n    if ($('#genderstab').exists()) {\n        $('#genderstab').click(function () {\n            // Don't open a second time\n            if (genderOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=genders\", null, function (data) {\n                genderOpen = true;\n                $('#genders').html(data);\n\n                turnOnEditDeleteButtons(\"genders\");\n\n                if ($('#next_gender_i').exists()) {\n                    genderid = parseInt($('#next_gender_i').text());\n                }\n                console.log(\"Next Gender ID: \" + genderid);\n                if ($('#btn_add_gender').exists()) {\n                    $('#btn_add_gender').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#gender_template').clone();\n                        var html = text.html().replace(/ZZ/g, genderid);\n                        $('#add_gender_div').after(html);\n                        turnOnButtons(\"gender\", genderid);\n                        turnOnTooltips(\"gender\", genderid);\n                        makeEditable(\"gender\", genderid);\n                        genderid = genderid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"genders\");\n            });\n        });\n    }\n\n    // Code to handle adding new genders to the page\n    var existid = 1;\n    var existOpen = false;\n    if ($('#existstab').exists()) {\n        $('#existstab').click(function () {\n            // Don't open a second time\n            if (existOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=dates\", null, function (data) {\n                existOpen = true;\n                $('#dates').html(data);\n\n                turnOnEditDeleteButtons(\"dates\");\n\n                if ($('#next_exist_i').exists()) {\n                    existid = parseInt($('#next_exist_i').text());\n                }\n                console.log(\"Next Exist Date ID: \" + existid);\n                if ($('#btn_add_exist_date').exists()) {\n                    $('#btn_add_exist_date').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#exist_date_template').clone();\n                        var html = text.html().replace(/ZZ/g, existid);\n                        $('#add_exist_div').after(html);\n                        turnOnButtons(\"exist\", existid);\n                        turnOnTooltips(\"exist\", existid);\n                        makeEditable(\"exist\", existid);\n                        existid = existid + 1;\n                        return false;\n                    });\n                }\n                if ($('#btn_add_exist_dateRange').exists()) {\n                    $('#btn_add_exist_dateRange').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#exist_dateRange_template').clone();\n                        var html = text.html().replace(/ZZ/g, existid);\n                        $('#add_exist_div').after(html);\n                        turnOnButtons(\"exist\", existid);\n                        turnOnTooltips(\"exist\", existid);\n                        makeEditable(\"exist\", existid);\n                        existid = existid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"dates\");\n            });\n        });\n    }\n\n    var sameAsid = 1;\n    var sameAsOpen = false;\n    if ($('#sameAstab').exists()) {\n        $('#sameAstab').click(function () {\n            // Don't open a second time\n            if (sameAsOpen) return;\n            //set sameAs vocab type id\n            $.get(snacUrl + \"/vocabulary?type=record_type&q=SameAs\", null, function (data) {\n                sameAsTermId = data.results[0].id;\n                $(\"#sameAs_type_id_ZZ\").val(sameAsTermId);\n            });\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=sameAs\", null, function (data) {\n                sameAsOpen = true;\n                $('#sameAs').html(data);\n\n                turnOnEditDeleteButtons(\"sameAs\");\n\n                if ($('#next_sameAs_i').exists()) {\n                    sameAsid = parseInt($('#next_sameAs_i').text());\n                }\n                console.log(\"Next sameAs ID: \" + sameAsid);\n                if ($('#btn_add_sameAs').exists()) {\n                    $('#btn_add_sameAs').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#sameAs_template').clone();\n                        var html = text.html().replace(/ZZ/g, sameAsid);\n                        $('#add_sameAs_div').after(html);\n                        turnOnButtons(\"sameAs\", sameAsid);\n                        turnOnTooltips(\"sameAs\", sameAsid);\n                        makeEditable(\"sameAs\", sameAsid);\n                        sameAsid = sameAsid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"sameAs\");\n            });\n        });\n    }\n\n    var entityIDid = 1;\n    var entityIDOpen = false;\n    if ($('#entityIDtab').exists()) {\n        $('#entityIDtab').click(function () {\n            // Don't open a second time\n            if (entityIDOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=entityID\", null, function (data) {\n                entityIDOpen = true;\n                $('#entityID').html(data);\n\n                turnOnEditDeleteButtons(\"entityID\");\n\n                if ($('#next_entityID_i').exists()) {\n                    entityIDid = parseInt($('#next_entityID_i').text());\n                }\n                console.log(\"Next entityID ID: \" + entityIDid);\n                if ($('#btn_add_entityID').exists()) {\n                    $('#btn_add_entityID').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#entityID_template').clone();\n                        var html = text.html().replace(/ZZ/g, entityIDid);\n                        $('#add_entityID_div').after(html);\n                        turnOnButtons(\"entityID\", entityIDid);\n                        turnOnTooltips(\"entityID\", entityIDid);\n                        makeEditable(\"entityID\", entityIDid);\n                        entityIDid = entityIDid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"entityID\");\n            });\n        });\n    }\n\n    var sourceid = 1;\n    var sourceOpen = false;\n    if ($('#sourcestab').exists()) {\n        $('#sourcestab').click(function () {\n            // Don't open a second time\n            if (sourceOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=sources\", null, function (data) {\n                sourceOpen = true;\n                $('#sources').html(data);\n\n                turnOnEditDeleteButtons(\"sources\");\n\n                if ($('#next_source_i').exists()) {\n                    sourceid = parseInt($('#next_source_i').text());\n                }\n                console.log(\"Next source ID: \" + sourceid);\n                if ($('#btn_add_source').exists()) {\n                    $('#btn_add_source').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#source_template').clone();\n                        var html = text.html().replace(/ZZ/g, sourceid);\n                        $('#add_source_div').after(html);\n                        turnOnButtons(\"source\", sourceid);\n                        turnOnTooltips(\"source\", sourceid);\n                        makeEditable(\"source\", sourceid);\n                        sourceid = sourceid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"sources\");\n            });\n        });\n    }\n\n    var resourceRelationid = 1;\n    var resourceRelationOpen = false;\n    if ($('#resourceRelationstab').exists()) {\n        $('#resourceRelationstab').click(function () {\n            // Don't open a second time\n            if (resourceRelationOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=resourceRelations\", null, function (data) {\n                resourceRelationOpen = true;\n                $('#resourceRelations').html(data);\n\n                turnOnEditDeleteButtons(\"resourceRelations\");\n\n                if ($('#next_resourceRelation_i').exists()) {\n                    resourceRelationid = parseInt($('#next_resourceRelation_i').text());\n                }\n                console.log(\"Next resourceRelation ID: \" + resourceRelationid);\n                if ($('#btn_create_resourceRelation').exists()) {\n                    $('#btn_create_resourceRelation').click(function () {\n                        var rid = $('input[name=resourceChoice]:checked', '#resource_search_form').val();\n                        if (rid != null && resourceResults != null && rid != 'new') {\n                            setEditedFlag(true);\n                            //somethingHasBeenEdited = true;\n                            var text = $('#resourceRelation_template').clone();\n                            var html = text.html().replace(/ZZ/g, resourceRelationid);\n                            $('#add_resourceRelation_div').after(html);\n\n                            if (typeof resourceResults[rid].id !== 'undefined') $('#resourceRelation_resourceid_' + resourceRelationid).val(resourceResults[rid].id);\n                            if (typeof resourceResults[rid].version !== 'undefined') $('#resourceRelation_resourceversion_' + resourceRelationid).val(resourceResults[rid].version);\n\n                            if (typeof resourceResults[rid].link !== 'undefined') $('#resourceRelation_linkText_' + resourceRelationid).html(\"<a target='_blank' href='\" + resourceResults[rid].link + \"'>\" + resourceResults[rid].link + \"</a>\" + \" <a class='label label-info' target='_blank' href='\" + resourceResults[rid].link + \"'>View</a>\");\n                            if (typeof resourceResults[rid].displayEntry !== 'undefined') $('#resourceRelation_displayEntryText_' + resourceRelationid).text(resourceResults[rid].displayEntry);\n                            if (typeof resourceResults[rid].title !== 'undefined') {\n                                $('#resourceRelation_titleText_' + resourceRelationid).text(resourceResults[rid].title);\n                                updatePictureTitle('resourceRelation', resourceRelationid, resourceResults[rid].title);\n                            }\n                            if (typeof resourceResults[rid].abstract !== 'undefined') $('#resourceRelation_abstractText_' + resourceRelationid).text(resourceResults[rid].abstract);\n                            if (typeof resourceResults[rid].extent !== 'undefined') $('#resourceRelation_extentText_' + resourceRelationid).text(resourceResults[rid].extent);\n                            // if (typeof resourceResults[rid].date !== 'undefined')\n                            //     $('#resourceRelation_dateText_'+resourceRelationid).text(resourceResults[rid].date);\n                            if (typeof resourceResults[rid].documentType !== 'undefined' && typeof resourceResults[rid].documentType.term !== 'undefined') $('#resourceRelation_documentTypeText_' + resourceRelationid).text(resourceResults[rid].documentType.term);\n\n                            $('#resourceRelation_linkText_' + resourceRelationid).after(\"<a class='control-label-subtext' target='_blank' href='\" + snacUrl + \"/vocab_administrator/resources/\" + resourceResults[rid].id + \"'>View in SNAC</a>\");\n                            turnOnButtons(\"resourceRelation\", resourceRelationid);\n                            turnOnTooltips(\"resourceRelation\", resourceRelationid);\n                            makeEditable(\"resourceRelation\", resourceRelationid);\n                            resourceRelationid = resourceRelationid + 1;\n                            $(\"#resource-results-box\").html(\"\");\n                            return true;\n                        }\n                        return false;\n                    });\n                }\n\n                if ($('#btn_open_create_resource').exists()) {\n                    $('#btn_open_create_resource').click(function () {\n                        // Close this modal and open the new modal\n                        $(\"#resourceSearchPane\").modal(\"hide\");\n\n                        // Set a 500ms timeout to give the hidden search pane time to fully close\n                        setTimeout(function () {\n                            $(\"#resourceCreatePane\").modal(\"show\");\n                        }, 500);\n\n                        // Grab the empty template and replace\n                        var text = $('#resource_template').clone();\n                        var html = text.html().replace(/ZZ/g, 0);\n                        $('#resource-create-box').html(html);\n                        var $resourceForm = $(\"#resource_create_form\");\n                        // Copy the search contents to title or href\n                        if ($(\"#resource-searchbox\").val().indexOf(\"http\") == -1) $resourceForm.find(\"#resource-title\").val($(\"#resource-searchbox\").val());else $resourceForm.find(\"#resource-url\").val($(\"#resource-searchbox\").val());\n\n                        $resourceForm.find('[data-toggle=\"popover\"]').popover({\n                            trigger: 'hover',\n                            container: 'body'\n                        });\n                        loadVocabSelectOptions($resourceForm.find(\"#resource-type-select\"), \"document_type\", \"Resource Type\");\n                        vocab_select_replace($resourceForm.find(\"#resource-repo\"), \"\", \"holding\", 3);\n                        $resourceForm.find(\"#new-resource-language-btn\").on(\"click\", newResourceLanguage);\n                        $resourceForm.find(\"#magic-resource-language-btn\").on(\"click\", magicNewResourceLanguage);\n\n                        $('#search-results-box').on(\"click\", \"a.list-group-item\", selectHoldingRepository);\n                        var timeoutID = null;\n                        $resourceForm.find('#searchbox').keyup(function () {\n                            clearTimeout(timeoutID);\n                            timeoutID = setTimeout(function () {\n                                setSearchPosition(0);searchAndUpdate();\n                            }, 500);\n                        });\n\n                        // Remove the search results from the other modal\n                        $(\"#resource-results-box\").html(\"\");\n                        return false;\n                    });\n                }\n\n                if ($('#btn_create_resource').exists()) {\n                    $('#resource_create_form').on(\"submit\", function () {\n                        // Remove leading and trailing whitespace\n                        if ($(\"#resource_create_form #resource-url\").val() == \"\") {\n                            if (!confirm('Are you sure you want to save without an HREF?')) {\n                                return;\n                            }\n                        }\n                        $(\"#resource_create_form input, textarea\").each(function () {\n                            $(this).val($.trim($(this).val()));\n                        });\n                        setDeletedResourceLanguageOperations($(\"#resource_create_form\"));\n\n                        $.post(snacUrl + \"/save_resource\", $(\"#resource_create_form\").serialize(), function (data) {\n                            if (typeof data.result !== 'undefined' && data.result !== 'false') {\n                                setEditedFlag(true);\n                                //somethingHasBeenEdited = true;\n                                var text = $('#resourceRelation_template').clone();\n                                var html = text.html().replace(/ZZ/g, resourceRelationid); // clones DOM, replaces zz with next ids\n                                $('#add_resourceRelation_div').after(html);\n\n                                if (typeof data.resource.id !== 'undefined') $('#resourceRelation_resourceid_' + resourceRelationid).val(data.resource.id);\n                                if (typeof data.resource.version !== 'undefined') $('#resourceRelation_resourceversion_' + resourceRelationid).val(data.resource.version);\n\n                                if (typeof data.resource.link !== 'undefined') $('#resourceRelation_linkText_' + resourceRelationid).html(\"<a target='_blank' href='\" + data.resource.link + \"'>\" + data.resource.link + \"</a>\" + \" <a class='label label-info' target='_blank' href='\" + data.resource.link + \"'>View</a>\");\n                                if (typeof data.resource.displayEntry !== 'undefined') $('#resourceRelation_displayEntryText_' + resourceRelationid).text(data.resource.displayEntry);\n                                if (typeof data.resource.title !== 'undefined') {\n                                    $('#resourceRelation_titleText_' + resourceRelationid).text(data.resource.title);\n                                    updatePictureTitle('resourceRelation', resourceRelationid, data.resource.title);\n                                }\n                                if (typeof data.resource.abstract !== 'undefined') $('#resourceRelation_abstractText_' + resourceRelationid).text(data.resource.abstract);\n                                if (typeof data.resource.extent !== 'undefined') $('#resourceRelation_extentText_' + resourceRelationid).text(data.resource.extent);\n                                if (typeof data.resource.documentType !== 'undefined' && typeof data.resource.documentType.term !== 'undefined') $('#resourceRelation_documentTypeText_' + resourceRelationid).text(data.resource.documentType.term);\n\n                                $('#resourceRelation_linkText_' + resourceRelationid).after(\"<a class='control-label-subtext' target='_blank' href='\" + snacUrl + \"/vocab_administrator/resources/\" + data.resource.id + \"'>View in SNAC</a>\");\n                                turnOnButtons(\"resourceRelation\", resourceRelationid);\n                                turnOnTooltips(\"resourceRelation\", resourceRelationid);\n                                makeEditable(\"resourceRelation\", resourceRelationid);\n                                resourceRelationid = resourceRelationid + 1;\n                                $(\"#resourceCreatePane\").modal(\"hide\");\n                                $('#resource-create-box').html(\"\");\n                                return true;\n                            } else {\n                                console.log(data);\n                                return false;\n                            }\n                        });\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"resourceRelations\");\n            });\n        });\n    }\n\n    var constellationRelationid = 1;\n    var constellationRelationOpen = false;\n    if ($('#constellationRelationstab').exists()) {\n        $('#constellationRelationstab').click(function () {\n            // Don't open a second time\n            if (constellationRelationOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=constellationRelations\", null, function (data) {\n                constellationRelationOpen = true;\n                $('#constellationRelations').html(data);\n\n                turnOnEditDeleteButtons(\"constellationRelations\");\n\n                if ($('#next_constellationRelation_i').exists()) {\n                    constellationRelationid = parseInt($('#next_constellationRelation_i').text());\n                }\n                console.log(\"Next constellationRelation ID: \" + constellationRelationid);\n                if ($('#btn_create_constellationRelation').exists()) {\n                    $('#btn_create_constellationRelation').click(function () {\n                        var cid = $('input[name=relationChoice]:checked', '#relation_search_form').val();\n                        if (cid != null) {\n                            setEditedFlag(true);\n                            //somethingHasBeenEdited = true;\n                            var text = $('#constellationRelation_template').clone();\n                            var html = text.html().replace(/ZZ/g, constellationRelationid);\n                            $('#add_constellationRelation_div').after(html);\n                            $('#constellationRelation_targetID_' + constellationRelationid).val(cid);\n                            $('#constellationRelation_content_' + constellationRelationid).val($('#relationChoice_nameEntry_' + cid).val());\n                            $('#constellationRelation_targetArkID_' + constellationRelationid).val($('#relationChoice_arkID_' + cid).val());\n                            $('#constellationRelation_targetEntityType_' + constellationRelationid).val($('#relationChoice_entityType_' + cid).val());\n\n                            updatePictureIcon('constellationRelation', constellationRelationid, $('#relationChoice_entityTypeText_' + cid).val());\n                            updatePictureTitle('constellationRelation', constellationRelationid, $('#relationChoice_nameEntry_' + cid).val());\n\n                            $('#constellationRelation_contentText_' + constellationRelationid).text($('#relationChoice_nameEntry_' + cid).val());\n                            $('#constellationRelation_targetArkIDText_' + constellationRelationid).text($('#relationChoice_arkID_' + cid).val());\n\n                            turnOnButtons(\"constellationRelation\", constellationRelationid);\n                            turnOnTooltips(\"constellationRelation\", constellationRelationid);\n                            makeEditable(\"constellationRelation\", constellationRelationid);\n\n                            constellationRelationid = constellationRelationid + 1;\n\n                            return true;\n                        }\n\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"constellationRelations\");\n            });\n        });\n    }\n\n    var languageid = 1;\n    var languageOpen = false;\n    if ($('#languagesUsedtab').exists()) {\n        $('#languagesUsedtab').click(function () {\n            // Don't open a second time\n            if (languageOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=languagesUsed\", null, function (data) {\n                languageOpen = true;\n                $('#languagesUsed').html(data);\n\n                turnOnEditDeleteButtons(\"languagesUsed\");\n\n                if ($('#next_language_i').exists()) {\n                    languageid = parseInt($('#next_language_i').text());\n                }\n                console.log(\"Next language ID: \" + languageid);\n                if ($('#btn_add_language').exists()) {\n                    $('#btn_add_language').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#language_template').clone();\n                        var html = text.html().replace(/ZZ/g, languageid);\n                        $('#add_language_div').after(html);\n                        turnOnButtons(\"language\", languageid);\n                        turnOnTooltips(\"language\", languageid);\n                        makeEditable(\"language\", languageid);\n                        languageid = languageid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"languagesUsed\");\n            });\n        });\n    }\n\n    var subjectid = 1;\n    var subjectOpen = false;\n    if ($('#subjectstab').exists()) {\n        $('#subjectstab').click(function () {\n            // Don't open a second time\n            if (subjectOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=subjects\", null, function (data) {\n                subjectOpen = true;\n                $('#subjects').html(data);\n\n                turnOnEditDeleteButtons(\"subjects\");\n\n                if ($('#next_subject_i').exists()) {\n                    subjectid = parseInt($('#next_subject_i').text());\n                }\n                console.log(\"Next subject ID: \" + subjectid);\n                if ($('#btn_add_subject').exists()) {\n                    $('#btn_add_subject').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#subject_template').clone();\n                        var html = text.html().replace(/ZZ/g, subjectid);\n                        $('#add_subject_div').after(html);\n                        turnOnButtons(\"subject\", subjectid);\n                        turnOnTooltips(\"subject\", subjectid);\n                        makeEditable(\"subject\", subjectid);\n                        subjectid = subjectid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"subjects\");\n            });\n        });\n    }\n\n    var nationalityid = 1;\n    var nationalityOpen = false;\n    if ($('#nationalitiestab').exists()) {\n        $('#nationalitiestab').click(function () {\n            // Don't open a second time\n            if (nationalityOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=nationalities\", null, function (data) {\n                nationalityOpen = true;\n                $('#nationalities').html(data);\n\n                turnOnEditDeleteButtons(\"nationalities\");\n\n                if ($('#next_nationality_i').exists()) {\n                    nationalityid = parseInt($('#next_nationality_i').text());\n                }\n                console.log(\"Next nationality ID: \" + nationalityid);\n                if ($('#btn_add_nationality').exists()) {\n                    $('#btn_add_nationality').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#nationality_template').clone();\n                        var html = text.html().replace(/ZZ/g, nationalityid);\n                        $('#add_nationality_div').after(html);\n                        turnOnButtons(\"nationality\", nationalityid);\n                        turnOnTooltips(\"nationality\", nationalityid);\n                        makeEditable(\"nationality\", nationalityid);\n                        nationalityid = nationalityid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"nationalities\");\n            });\n        });\n    }\n\n    var functionid = 1;\n    var functionOpen = false;\n    if ($('#functionstab').exists()) {\n        $('#functionstab').click(function () {\n            // Don't open a second time\n            if (functionOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=functions\", null, function (data) {\n                functionOpen = true;\n                $('#functions').html(data);\n\n                turnOnEditDeleteButtons(\"functions\");\n\n                if ($('#next_function_i').exists()) {\n                    functionid = parseInt($('#next_function_i').text());\n                }\n                console.log(\"Next function ID: \" + functionid);\n                if ($('#btn_add_function').exists()) {\n                    $('#btn_add_function').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#function_template').clone();\n                        var html = text.html().replace(/ZZ/g, functionid);\n                        $('#add_function_div').after(html);\n                        turnOnButtons(\"function\", functionid);\n                        turnOnTooltips(\"function\", functionid);\n                        makeEditable(\"function\", functionid);\n                        functionid = functionid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"functions\");\n            });\n        });\n    }\n\n    var occupationid = 1;\n    var occupationOpen = false;\n    if ($('#occupationstab').exists()) {\n        $('#occupationstab').click(function () {\n            // Don't open a second time\n            if (occupationOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=occupations\", null, function (data) {\n                occupationOpen = true;\n                $('#occupations').html(data);\n\n                turnOnEditDeleteButtons(\"occupations\");\n\n                if ($('#next_occupation_i').exists()) {\n                    occupationid = parseInt($('#next_occupation_i').text());\n                }\n                console.log(\"Next occupation ID: \" + occupationid);\n                if ($('#btn_add_occupation').exists()) {\n                    $('#btn_add_occupation').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#occupation_template').clone();\n                        var html = text.html().replace(/ZZ/g, occupationid);\n                        $('#add_occupation_div').after(html);\n                        turnOnButtons(\"occupation\", occupationid);\n                        turnOnTooltips(\"occupation\", occupationid);\n                        makeEditable(\"occupation\", occupationid);\n                        occupationid = occupationid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"occupations\");\n            });\n        });\n    }\n\n    var legalStatusid = 1;\n    var legalStatusOpen = false;\n    if ($('#legalStatusestab').exists()) {\n        $('#legalStatusestab').click(function () {\n            // Don't open a second time\n            if (legalStatusOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=legalStatuses\", null, function (data) {\n                legalStatusOpen = true;\n                $('#legalStatuses').html(data);\n\n                turnOnEditDeleteButtons(\"legalStatuses\");\n\n                if ($('#next_legalStatus_i').exists()) {\n                    legalStatusid = parseInt($('#next_legalStatus_i').text());\n                }\n                console.log(\"Next legalStatus ID: \" + legalStatusid);\n                if ($('#btn_add_legalStatus').exists()) {\n                    $('#btn_add_legalStatus').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#legalStatus_template').clone();\n                        var html = text.html().replace(/ZZ/g, legalStatusid);\n                        $('#add_legalStatus_div').after(html);\n                        turnOnButtons(\"legalStatus\", legalStatusid);\n                        turnOnTooltips(\"legalStatus\", legalStatusid);\n                        makeEditable(\"legalStatus\", legalStatusid);\n                        legalStatusid = legalStatusid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"legalStatuses\");\n            });\n        });\n    }\n\n    var placeid = 1;\n    var placeOpen = false;\n    if ($('#placestab').exists()) {\n        $('#placestab').click(function () {\n            // Don't open a second time\n            if (placeOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=places\", null, function (data) {\n                placeOpen = true;\n                $('#places').html(data);\n\n                // Load the place cache, if needed\n                loadGeoPlaceResultCache();\n\n                turnOnEditDeleteButtons(\"places\");\n\n                if ($('#next_place_i').exists()) {\n                    placeid = parseInt($('#next_place_i').text());\n                }\n                console.log(\"Next place ID: \" + placeid);\n                if ($('#btn_add_place').exists()) {\n                    $('#btn_add_place').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#place_template').clone();\n                        var html = text.html().replace(/ZZ/g, placeid);\n                        $('#add_place_div').after(html);\n                        turnOnButtons(\"place\", placeid);\n                        turnOnTooltips(\"place\", placeid);\n                        makeEditable(\"place\", placeid);\n                        placeid = placeid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"places\");\n            });\n        });\n    }\n\n    var conventionDeclarationid = 1;\n    var conventionDeclarationOpen = false;\n    if ($('#conventionDeclarationstab').exists()) {\n        $('#conventionDeclarationstab').click(function () {\n            // Don't open a second time\n            if (conventionDeclarationOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=conventionDeclarations\", null, function (data) {\n                conventionDeclarationOpen = true;\n                $('#conventionDeclarations').html(data);\n\n                turnOnEditDeleteButtons(\"conventionDeclarations\");\n\n                if ($('#next_conventionDeclaration_i').exists()) {\n                    conventionDeclarationid = parseInt($('#next_conventionDeclaration_i').text());\n                }\n                console.log(\"Next conventionDeclaration ID: \" + conventionDeclarationid);\n                if ($('#btn_add_conventionDeclaration').exists()) {\n                    $('#btn_add_conventionDeclaration').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#conventionDeclaration_template').clone();\n                        var html = text.html().replace(/ZZ/g, conventionDeclarationid);\n                        $('#add_conventionDeclaration_div').after(html);\n                        turnOnButtons(\"conventionDeclaration\", conventionDeclarationid);\n                        turnOnTooltips(\"conventionDeclaration\", conventionDeclarationid);\n                        makeEditable(\"conventionDeclaration\", conventionDeclarationid);\n                        conventionDeclarationid = conventionDeclarationid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"conventionDeclarations\");\n            });\n        });\n    }\n\n    var generalContextid = 1;\n    var generalContextOpen = false;\n    if ($('#generalContextstab').exists()) {\n        $('#generalContextstab').click(function () {\n            // Don't open a second time\n            if (generalContextOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=generalContexts\", null, function (data) {\n                generalContextOpen = true;\n                $('#generalContexts').html(data);\n\n                turnOnEditDeleteButtons(\"generalContexts\");\n\n                if ($('#next_generalContext_i').exists()) {\n                    generalContextid = parseInt($('#next_generalContext_i').text());\n                }\n                console.log(\"Next generalContext ID: \" + generalContextid);\n                if ($('#btn_add_generalContext').exists()) {\n                    $('#btn_add_generalContext').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#generalContext_template').clone();\n                        var html = text.html().replace(/ZZ/g, generalContextid);\n                        $('#add_generalContext_div').after(html);\n                        turnOnButtons(\"generalContext\", generalContextid);\n                        turnOnTooltips(\"generalContext\", generalContextid);\n                        makeEditable(\"generalContext\", generalContextid);\n                        generalContextid = generalContextid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"generalContexts\");\n            });\n        });\n    }\n\n    var structureOrGenealogyid = 1;\n    var structureOrGenealogyOpen = false;\n    if ($('#structureOrGenealogiestab').exists()) {\n        $('#structureOrGenealogiestab').click(function () {\n            // Don't open a second time\n            if (structureOrGenealogyOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=structureOrGenealogies\", null, function (data) {\n                structureOrGenealogyOpen = true;\n                $('#structureOrGenealogies').html(data);\n\n                turnOnEditDeleteButtons(\"structureOrGenealogies\");\n\n                if ($('#next_structureOrGenealogy_i').exists()) {\n                    structureOrGenealogyid = parseInt($('#next_structureOrGenealogy_i').text());\n                }\n                console.log(\"Next structureOrGenealogy ID: \" + structureOrGenealogyid);\n                if ($('#btn_add_structureOrGenealogy').exists()) {\n                    $('#btn_add_structureOrGenealogy').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#structureOrGenealogy_template').clone();\n                        var html = text.html().replace(/ZZ/g, structureOrGenealogyid);\n                        $('#add_structureOrGenealogy_div').after(html);\n                        turnOnButtons(\"structureOrGenealogy\", structureOrGenealogyid);\n                        turnOnTooltips(\"structureOrGenealogy\", structureOrGenealogyid);\n                        makeEditable(\"structureOrGenealogy\", structureOrGenealogyid);\n                        structureOrGenealogyid = structureOrGenealogyid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"structureOrGenealogies\");\n            });\n        });\n    }\n\n    var mandateid = 1;\n    var mandateOpen = false;\n    if ($('#mandatestab').exists()) {\n        $('#mandatestab').click(function () {\n            // Don't open a second time\n            if (mandateOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=mandates\", null, function (data) {\n                mandateOpen = true;\n                $('#mandates').html(data);\n\n                turnOnEditDeleteButtons(\"mandates\");\n\n                if ($('#next_mandate_i').exists()) {\n                    mandateid = parseInt($('#next_mandate_i').text());\n                }\n                console.log(\"Next mandate ID: \" + mandateid);\n                if ($('#btn_add_mandate').exists()) {\n                    $('#btn_add_mandate').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#mandate_template').clone();\n                        var html = text.html().replace(/ZZ/g, mandateid);\n                        $('#add_mandate_div').after(html);\n                        turnOnButtons(\"mandate\", mandateid);\n                        turnOnTooltips(\"mandate\", mandateid);\n                        makeEditable(\"mandate\", mandateid);\n                        mandateid = mandateid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"mandates\");\n            });\n        });\n    }\n\n    var biogHistid = 1;\n    var biogHistOpen = false;\n    if ($('#biogHiststab').exists()) {\n        $('#biogHiststab').click(function () {\n            // Don't open a second time\n            if (biogHistOpen) return;\n\n            $.get(snacUrl + \"/edit_part/\" + $('#constellationid').val() + \"/\" + $('#version').val() + \"?part=biogHists\", null, function (data) {\n                biogHistOpen = true;\n                $('#biogHists').html(data);\n\n                turnOnEditDeleteButtons(\"biogHists\");\n\n                if ($('#next_biogHist_i').exists()) {\n                    biogHistid = parseInt($('#next_biogHist_i').text());\n                }\n                console.log(\"Next biogHist ID: \" + biogHistid);\n                if ($('#btn_add_biogHist').exists()) {\n                    $('#btn_add_biogHist').click(function () {\n                        setEditedFlag(true);\n                        //somethingHasBeenEdited = true;\n                        var text = $('#biogHist_template').clone();\n                        var html = text.html().replace(/ZZ/g, biogHistid);\n                        $('#add_biogHist_div').after(html);\n                        turnOnButtons(\"biogHist\", biogHistid);\n                        turnOnTooltips(\"biogHist\", biogHistid);\n                        makeEditable(\"biogHist\", biogHistid);\n                        biogHistid = biogHistid + 1;\n                        return false;\n                    });\n                }\n\n                turnOnTooltipsForTab(\"biogHists\");\n            });\n        });\n    }\n\n    turnOnTooltipsForTab();\n\n    $(\"#info-dropdown\").click(function (e) {\n        $(this).parent().toggleClass(\"open\");\n        e.stopPropagation();\n    });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ })

/******/ })));